{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ContentBox from '../components/contentBox';\nimport SliderImageCard from '../components/cards/SliderImageCard';\nimport { Container, Row, Col } from 'reactstrap';\nimport { getListBanner } from '../components/actions';\n\nvar SampleBanner =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SampleBanner, _React$Component);\n\n  _createClass(SampleBanner, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, props, stores;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store;\n                props = {\n                  showHeader: true,\n                  showFooter: true\n                };\n                _context.next = 4;\n                return store.getState();\n\n              case 4:\n                stores = _context.sent;\n                _context.prev = 5;\n\n                if (stores.listBanner) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 9;\n                return store.dispatch(getListBanner());\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](5);\n                props.error = 'Unable to fetch AsyncData on server';\n\n              case 14:\n                return _context.abrupt(\"return\", props);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 11]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function SampleBanner(props) {\n    var _this;\n\n    _classCallCheck(this, SampleBanner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SampleBanner).call(this, props));\n    _this.state = {\n      title: props.companyName,\n      subTitle: \"Content Management System\",\n      showHeader: props.showHeader,\n      headerHeight: props.headerHeight,\n      navIsOpen: props.navIsOpen,\n      navMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n      navMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n      listBanners: props.listBanner\n    };\n    return _this;\n  }\n\n  _createClass(SampleBanner, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.setState({\n        listBanners: nextProps.listBanner,\n        navIsOpen: nextProps.navIsOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          showHeader = _this$state.showHeader,\n          headerHeight = _this$state.headerHeight,\n          navIsOpen = _this$state.navIsOpen,\n          navMinWidth = _this$state.navMinWidth,\n          navMaxWidth = _this$state.navMaxWidth,\n          listBanners = _this$state.listBanners;\n      return React.createElement(\"div\", {\n        role: \"main\",\n        className: \"animate-all fast bg-light\",\n        style: {\n          paddingTop: showHeader ? headerHeight : 0,\n          paddingLeft: navMinWidth,\n          overflowX: \"hidden\"\n        }\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"contentContainer px-4 pt-4 pb-2\",\n        style: {\n          marginLeft: navIsOpen ? navMaxWidth - navMinWidth : 0,\n          width: navIsOpen ? \"calc(100% - \".concat(navMaxWidth - navMinWidth, \"px)\") : '100%'\n        }\n      }, React.createElement(Row, null, React.createElement(Col, {\n        lg: \"12\"\n      }, React.createElement(ContentBox, {\n        className: \"w-100 p-0 overflow-auto\"\n      }, React.createElement(SliderImageCard, {\n        datas: listBanners\n      }))))));\n    }\n  }]);\n\n  return SampleBanner;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getListBanner: bindActionCreators(getListBanner, dispatch)\n  };\n};\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(SampleBanner);","map":null,"metadata":{},"sourceType":"module"}