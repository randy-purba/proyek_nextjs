{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/tog-randy/Source/BCA/Project/pages/questionBank.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport TableBox from '../components/tables';\nimport Pagination from '../components/cards/PaginationCard';\nimport { getListBankQuestion, getListCities } from '../components/actions';\nimport { timestampToDateTime, numberToCurrency, numberWithDot } from '../components/functions';\nimport Modal from '../components/modals';\nimport QuestionForm from '../components/fragments/question/questionForm';\nimport { createMemoryHistory } from 'history';\n\nvar QuestionBank =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QuestionBank, _React$Component);\n\n  _createClass(QuestionBank, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, props, stores;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store;\n                props = {\n                  showHeader: true,\n                  showFooter: true,\n                  transanctionPage: 0,\n                  transactionMaxLen: 10\n                };\n                _context.next = 4;\n                return store.getState();\n\n              case 4:\n                stores = _context.sent;\n                _context.prev = 5;\n\n                if (stores.listBankQuestion) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 9;\n                return store.dispatch(getListBankQuestion(props.transanctionPage, props.transactionMaxLen));\n\n              case 9:\n                if (stores.listCity) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 12;\n                return store.dispatch(getListCities());\n\n              case 12:\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](5);\n                props.error = 'Unable to fetch AsyncData on server';\n\n              case 17:\n                return _context.abrupt(\"return\", props);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 14]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function QuestionBank(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionBank);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionBank).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onPaginationClick\", function (page) {\n      var _this$state = _this.state,\n          transactionFetchLen = _this$state.transactionFetchLen,\n          transactionDateFrom = _this$state.transactionDateFrom,\n          transactionDateTo = _this$state.transactionDateTo,\n          transactionSortBy = _this$state.transactionSortBy,\n          transactionSearchKey = _this$state.transactionSearchKey;\n\n      _this.props.getListBankQuestion(page, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, transactionSearchKey);\n\n      _this.setState({\n        transactionPage: page\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterInit\", function (dateFrom, dateTo) {\n      var _this$state2 = _this.state,\n          transactionFetchLen = _this$state2.transactionFetchLen,\n          transactionSortBy = _this$state2.transactionSortBy,\n          transactionSearchKey = _this$state2.transactionSearchKey;\n\n      _this.props.getListBankQuestion(0, transactionFetchLen, dateFrom, dateTo, transactionSortBy, transactionSearchKey);\n\n      _this.setState({\n        transactionPage: 0,\n        transactionDateFrom: dateFrom,\n        transactionDateTo: dateTo\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortInit\", function (e) {\n      var target = e.target,\n          value = target.value;\n      var _this$state3 = _this.state,\n          transactionFetchLen = _this$state3.transactionFetchLen,\n          transactionDateFrom = _this$state3.transactionDateFrom,\n          transactionDateTo = _this$state3.transactionDateTo,\n          transactionSearchKey = _this$state3.transactionSearchKey;\n\n      _this.props.getListBankQuestion(0, transactionFetchLen, transactionDateFrom, transactionDateTo, value, transactionSearchKey);\n\n      _this.setState({\n        transactionPage: 0,\n        transactionSortBy: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSearchKeyword\", function (keywords) {\n      var _this$state4 = _this.state,\n          transactionPage = _this$state4.transactionPage,\n          transactionFetchLen = _this$state4.transactionFetchLen,\n          transactionDateFrom = _this$state4.transactionDateFrom,\n          transactionDateTo = _this$state4.transactionDateTo,\n          transactionSortBy = _this$state4.transactionSortBy;\n\n      _this.props.getListBankQuestion(transactionPage, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, keywords);\n\n      _this.setState({\n        transactionSearchKey: keywords\n      });\n    });\n\n    _this.state = {\n      title: props.companyName,\n      subTitle: \"Content Management System\",\n      showHeader: props.showHeader,\n      headerHeight: props.headerHeight,\n      navIsOpen: props.navIsOpen,\n      navMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n      navMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n      transactionPage: props.transanctionPage,\n      transactionFetchLen: props.transactionMaxLen,\n      transactionDateFrom: undefined,\n      transactionDateTo: undefined,\n      transactionSortBy: \"date\",\n      transactionSearchKey: \"\",\n      listBankQuestion: props.listBankQuestion,\n      totalBankQuestion: props.totalBankQuestion,\n      modal: false,\n      listCity: props.listCity,\n      formKota: 2\n    };\n    _this.toogleModalsNewQuestion = _this.toogleModalsNewQuestion.bind(_assertThisInitialized(_this));\n    _this.history = createMemoryHistory();\n    return _this;\n  }\n\n  _createClass(QuestionBank, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.setState({\n        navIsOpen: nextProps.navIsOpen,\n        listBankQuestion: nextProps.listBankQuestion,\n        totalBankQuestion: nextProps.totalBankQuestion\n      });\n    }\n  }, {\n    key: \"toogleModalsNewQuestion\",\n    value: function toogleModalsNewQuestion() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state5 = this.state,\n          showHeader = _this$state5.showHeader,\n          headerHeight = _this$state5.headerHeight,\n          navIsOpen = _this$state5.navIsOpen,\n          navMinWidth = _this$state5.navMinWidth,\n          navMaxWidth = _this$state5.navMaxWidth,\n          listCity = _this$state5.listCity,\n          listBankQuestion = _this$state5.listBankQuestion,\n          totalBankQuestion = _this$state5.totalBankQuestion,\n          transactionPage = _this$state5.transactionPage,\n          transactionFetchLen = _this$state5.transactionFetchLen,\n          transactionSortBy = _this$state5.transactionSortBy;\n      var listProvince = listCity.filter(function (data) {\n        return data.id === _this2.state.formKota;\n      })[0].provinsi;\n      return React.createElement(\"div\", {\n        role: \"main\",\n        className: \"animate-all fast bg-light\",\n        style: {\n          paddingTop: showHeader ? headerHeight : 0,\n          paddingLeft: navMinWidth,\n          overflowX: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"contentContainer px-4 pt-4 pb-2\",\n        style: {\n          marginLeft: navIsOpen ? navMaxWidth - navMinWidth : 0,\n          width: navIsOpen ? \"calc(100% - \".concat(navMaxWidth - navMinWidth, \"px)\") : '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(TableBox, {\n        title: \"Bank Soal\",\n        isResponsive: true,\n        tHead: [\"#\", \"Category\", \"Question Type\", \"Created Date\", \"Education\", \"Action\"],\n        sortItems: [{\n          id: \"name\",\n          name: \"Category\"\n        }, {\n          id: \"question_type\",\n          name: \"Question Type\"\n        }, {\n          id: \"date\",\n          name: \"Created Date\"\n        }, {\n          id: \"education\",\n          name: \"Education\"\n        }],\n        onSortClick: this.onSortInit,\n        sortValue: transactionSortBy,\n        deepSearch: true,\n        maxRangeDateFilter: 5,\n        exportToFile: true,\n        exportData: listBankQuestion,\n        exportFileName: \"Category_Bank_Soal_\".concat(new Date().getTime()),\n        onFilterClick: this.onFilterInit,\n        onKeySearch: this.onSearchKeyword,\n        noResult: listBankQuestion.length === 0,\n        pagination: React.createElement(Pagination, {\n          ariaLabel: \"Page navigation\",\n          size: \"sm\",\n          totalContent: totalBankQuestion,\n          currentPage: transactionPage,\n          contentMaxLength: transactionFetchLen,\n          onClick: this.onPaginationClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, listBankQuestion.map(function (data, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, key + 1 + transactionPage * transactionFetchLen), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, data.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, data.question_type), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, timestampToDateTime(data.date, false)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, data.education), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          color: \"info\",\n          className: \"mr-2 px-2 font-14\",\n          style: {\n            marginTop: \"5px\",\n            height: \"31px\"\n          },\n          onClick: _this2.toogleModalsNewQuestion,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"mr-1 icon-plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }), \"Soal\"), React.createElement(Button, {\n          size: \"sm\",\n          color: \"secondary\",\n          className: \"mr-2 px-2 font-14\",\n          style: {\n            marginTop: \"5px\",\n            height: \"31px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon-eye\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        })), React.createElement(Button, {\n          size: \"sm\",\n          color: \"warning\",\n          className: \"mr-2 px-2 font-14\",\n          style: {\n            marginTop: \"5px\",\n            height: \"31px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        })), React.createElement(Button, {\n          size: \"sm\",\n          color: \"danger\",\n          className: \"mr-2 px-2 font-14\",\n          style: {\n            marginTop: \"5px\",\n            height: \"31px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }))));\n      }))))), React.createElement(Modal, {\n        modalIsOpen: this.state.modal,\n        toggleModal: this.toogleModalsNewQuestion,\n        classNameModal: this.props.className,\n        titleModalHeader: \"Add New Question\",\n        sizeModal: \"lg\",\n        centeredModal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(QuestionForm, {\n        isResponsive: true,\n        tHead: [\"#\", \"Category\", \"Question Type\", \"Created Date\", \"Education\", \"Action\"],\n        sortItems: [{\n          id: \"name\",\n          name: \"Category\"\n        }, {\n          id: \"question_type\",\n          name: \"Question Type\"\n        }, {\n          id: \"date\",\n          name: \"Created Date\"\n        }, {\n          id: \"education\",\n          name: \"Education\"\n        }],\n        onSortClick: this.onSortInit,\n        sortValue: transactionSortBy,\n        deepSearch: true,\n        maxRangeDateFilter: 5,\n        exportToFile: true,\n        exportData: listBankQuestion,\n        exportFileName: \"Category_Bank_Soal_\".concat(new Date().getTime()),\n        onFilterClick: this.onFilterInit,\n        onKeySearch: this.onSearchKeyword,\n        noResult: listBankQuestion.length === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return QuestionBank;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getListBankQuestion: bindActionCreators(getListBankQuestion, dispatch),\n    getListCities: bindActionCreators(getListCities, dispatch)\n  };\n};\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(QuestionBank);","map":{"version":3,"sources":["/home/tog-randy/Source/BCA/Project/pages/questionBank.js"],"names":["React","connect","bindActionCreators","BrowserRouter","Router","Route","Container","Row","Col","Button","TableBox","Pagination","getListBankQuestion","getListCities","timestampToDateTime","numberToCurrency","numberWithDot","Modal","QuestionForm","createMemoryHistory","QuestionBank","store","props","showHeader","showFooter","transanctionPage","transactionMaxLen","getState","stores","listBankQuestion","dispatch","listCity","error","page","state","transactionFetchLen","transactionDateFrom","transactionDateTo","transactionSortBy","transactionSearchKey","setState","transactionPage","dateFrom","dateTo","e","target","value","keywords","title","companyName","subTitle","headerHeight","navIsOpen","navMaxWidth","navMinWidth","undefined","totalBankQuestion","modal","formKota","toogleModalsNewQuestion","bind","history","nextProps","prevState","listProvince","filter","data","id","provinsi","paddingTop","paddingLeft","overflowX","marginLeft","width","name","onSortInit","Date","getTime","onFilterInit","onSearchKeyword","length","onPaginationClick","map","key","question_type","date","education","marginTop","height","className","Component","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { BrowserRouter as Router, Route} from 'react-router-dom' \nimport { Container, Row, Col, Button } from 'reactstrap'\nimport TableBox from '../components/tables'\nimport Pagination from '../components/cards/PaginationCard'\nimport { getListBankQuestion, getListCities } from '../components/actions'\nimport { timestampToDateTime, numberToCurrency, numberWithDot } from '../components/functions'\nimport Modal from '../components/modals'\nimport QuestionForm from '../components/fragments/question/questionForm'\nimport { createMemoryHistory } from 'history'\n\n\nclass QuestionBank extends React.Component {\n\n\tstatic async getInitialProps({ store }) {\n\t\tlet props = { showHeader: true, showFooter: true, transanctionPage: 0, transactionMaxLen: 10 }\n\t\tlet stores = await store.getState()\n\t\ttry {\n\t\t\t// Scope List Transaction\n\t\t\tif(!stores.listBankQuestion) await store.dispatch(getListBankQuestion(props.transanctionPage, props.transactionMaxLen))\n\n\t\t\tif(!stores.listCity) await store.dispatch(getListCities())\n\n\t\t} catch (e) {\n\t\t\tprops.error = 'Unable to fetch AsyncData on server'\n\t\t}\n\t\treturn props\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttitle: props.companyName,\n\t\t\tsubTitle: \"Content Management System\",\n\t\t\tshowHeader: props.showHeader,\n\t\t\theaderHeight: props.headerHeight,\n\t\t\tnavIsOpen: props.navIsOpen,\n\t\t\tnavMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n\t\t\tnavMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n\t\t\ttransactionPage: props.transanctionPage,\n\t\t\ttransactionFetchLen: props.transactionMaxLen,\n\t\t\ttransactionDateFrom: undefined,\n\t\t\ttransactionDateTo: undefined,\n\t\t\ttransactionSortBy: \"date\",\n\t\t\ttransactionSearchKey: \"\",\n\t\t\tlistBankQuestion: props.listBankQuestion,\n\t\t\ttotalBankQuestion: props.totalBankQuestion,\n\t\t\tmodal:false,\n\t\t\tlistCity: props.listCity,\n\t\t\tformKota: 2\n\t\t}\n\n\t\tthis.toogleModalsNewQuestion = this.toogleModalsNewQuestion.bind(this);\n\n\t\tthis.history = createMemoryHistory();\n\t}\n\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tthis.setState({\n\t\t\tnavIsOpen: nextProps.navIsOpen,\n\t\t\tlistBankQuestion: nextProps.listBankQuestion,\n\t\t\ttotalBankQuestion: nextProps.totalBankQuestion\n\t\t})\n\t}\n\n\ttoogleModalsNewQuestion() {\n\t\tthis.setState(prevState => ({\n\t\t\tmodal: !prevState.modal\n\t\t}));\n\t}\n\n\tonPaginationClick = (page) => {\n\t\tconst { transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, transactionSearchKey } = this.state\n\t\tthis.props.getListBankQuestion(page, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, transactionSearchKey)\n\t\tthis.setState({transactionPage: page})\n\t}\n\n\tonFilterInit = (dateFrom, dateTo) => {\n\t\tconst { transactionFetchLen, transactionSortBy, transactionSearchKey } = this.state\n\t\tthis.props.getListBankQuestion(0, transactionFetchLen, dateFrom, dateTo, transactionSortBy, transactionSearchKey)\n\t\tthis.setState({transactionPage: 0, transactionDateFrom: dateFrom, transactionDateTo: dateTo})\n\t}\n\n\tonSortInit = (e) => {\n\t\tconst target = e.target, value = target.value\n\t\tconst { transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSearchKey } = this.state\n\t\tthis.props.getListBankQuestion(0, transactionFetchLen, transactionDateFrom, transactionDateTo, value, transactionSearchKey)\n\t\tthis.setState({transactionPage: 0, transactionSortBy: value})\n\t}\n\n\tonSearchKeyword = (keywords) => {\n\t\tconst { transactionPage, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy } = this.state\n\t\tthis.props.getListBankQuestion(transactionPage, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, keywords)\n\t\tthis.setState({transactionSearchKey: keywords})\n\t}\n\n\trender() {\n\t\tconst { \n\t\t\tshowHeader, headerHeight, navIsOpen, navMinWidth, navMaxWidth, listCity,\n\t\t\tlistBankQuestion, totalBankQuestion, transactionPage, transactionFetchLen, transactionSortBy\n\t\t} = this.state\n\n\t\tconst listProvince = listCity.filter(data => data.id === this.state.formKota)[0].provinsi\n\t\t\n\t\treturn (\n\t\t\t\t<div \n\t\t\t\t\trole=\"main\" \n\t\t\t\t\tclassName=\"animate-all fast bg-light\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpaddingTop: showHeader ? headerHeight : 0,\n\t\t\t\t\t\tpaddingLeft: navMinWidth,\n\t\t\t\t\t\toverflowX: \"hidden\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Container \n\t\t\t\t\t\tfluid \n\t\t\t\t\t\tclassName=\"contentContainer px-4 pt-4 pb-2\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginLeft: navIsOpen ? navMaxWidth-navMinWidth : 0,\n\t\t\t\t\t\t\twidth: navIsOpen ? `calc(100% - ${navMaxWidth-navMinWidth}px)` : '100%'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t\t<TableBox \n\t\t\t\t\t\t\t\t\ttitle=\"Bank Soal\" \n\t\t\t\t\t\t\t\t\tisResponsive={true} \n\t\t\t\t\t\t\t\t\ttHead={[\"#\", \"Category\", \"Question Type\", \"Created Date\", \"Education\", \"Action\"]}\n\t\t\t\t\t\t\t\t\tsortItems={[\n\t\t\t\t\t\t\t\t\t\t{ id: \"name\", name: \"Category\"}, \n\t\t\t\t\t\t\t\t\t\t{ id: \"question_type\", name: \"Question Type\" }, \n\t\t\t\t\t\t\t\t\t\t{ id: \"date\", name: \"Created Date\" }, \n\t\t\t\t\t\t\t\t\t\t{ id: \"education\", name: \"Education\"}\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tonSortClick={this.onSortInit}\n\t\t\t\t\t\t\t\t\tsortValue={transactionSortBy}\n\t\t\t\t\t\t\t\t\tdeepSearch={true}\n\t\t\t\t\t\t\t\t\tmaxRangeDateFilter={5}\n\t\t\t\t\t\t\t\t\texportToFile={true}\n\t\t\t\t\t\t\t\t\texportData={listBankQuestion}\n\t\t\t\t\t\t\t\t\texportFileName={`Category_Bank_Soal_${(new Date()).getTime()}`}\n\t\t\t\t\t\t\t\t\tonFilterClick={this.onFilterInit}\n\t\t\t\t\t\t\t\t\tonKeySearch={this.onSearchKeyword}\n\t\t\t\t\t\t\t\t\tnoResult={listBankQuestion.length === 0}\n\t\t\t\t\t\t\t\t\tpagination={\n\t\t\t\t\t\t\t\t\t\t<Pagination \n\t\t\t\t\t\t\t\t\t\t\tariaLabel=\"Page navigation\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\ttotalContent={totalBankQuestion}\n\t\t\t\t\t\t\t\t\t\t\tcurrentPage={transactionPage}\n\t\t\t\t\t\t\t\t\t\t\tcontentMaxLength={transactionFetchLen}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.onPaginationClick}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlistBankQuestion.map((data, key) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(key + 1) +  (transactionPage * transactionFetchLen)}\n\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{data.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{data.question_type}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{timestampToDateTime(data.date, false)}\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{data.education}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" color=\"info\" className=\"mr-2 px-2 font-14\" style={{marginTop: \"5px\", height: \"31px\"}} onClick={this.toogleModalsNewQuestion}><i className=\"mr-1 icon-plus\"></i>Soal</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" color=\"secondary\" className=\"mr-2 px-2 font-14\" style={{marginTop: \"5px\", height: \"31px\"}}><i className=\"icon-eye\"></i></Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" color=\"warning\" className=\"mr-2 px-2 font-14\" style={{marginTop: \"5px\", height: \"31px\"}}><i className=\"icon-edit\"></i></Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" color=\"danger\" className=\"mr-2 px-2 font-14\" style={{marginTop: \"5px\", height: \"31px\"}}><i className=\"icon-trash\"></i></Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</TableBox>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\n\t\t\t\t\t<Modal \n\t\t\t\t\t\tmodalIsOpen={this.state.modal}\n\t\t\t\t\t\ttoggleModal={this.toogleModalsNewQuestion}\n\t\t\t\t\t\tclassNameModal={this.props.className}\n\t\t\t\t\t\ttitleModalHeader=\"Add New Question\"\n\t\t\t\t\t\tsizeModal=\"lg\"\n\t\t\t\t\t\tcenteredModal={true}\n\t\t\t\t\t>\n\t\t\t\t\t\t<QuestionForm\n\t\t\t\t\t\t\tisResponsive={true} \n\t\t\t\t\t\t\ttHead={[\"#\", \"Category\", \"Question Type\", \"Created Date\", \"Education\", \"Action\"]}\n\t\t\t\t\t\t\tsortItems={[\n\t\t\t\t\t\t\t\t{ id: \"name\", name: \"Category\"}, \n\t\t\t\t\t\t\t\t{ id: \"question_type\", name: \"Question Type\" }, \n\t\t\t\t\t\t\t\t{ id: \"date\", name: \"Created Date\" }, \n\t\t\t\t\t\t\t\t{ id: \"education\", name: \"Education\"}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tonSortClick={this.onSortInit}\n\t\t\t\t\t\t\tsortValue={transactionSortBy}\n\t\t\t\t\t\t\tdeepSearch={true}\n\t\t\t\t\t\t\tmaxRangeDateFilter={5}\n\t\t\t\t\t\t\texportToFile={true}\n\t\t\t\t\t\t\texportData={listBankQuestion}\n\t\t\t\t\t\t\texportFileName={`Category_Bank_Soal_${(new Date()).getTime()}`}\n\t\t\t\t\t\t\tonFilterClick={this.onFilterInit}\n\t\t\t\t\t\t\tonKeySearch={this.onSearchKeyword}\n\t\t\t\t\t\t\tnoResult={listBankQuestion.length === 0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetListBankQuestion: bindActionCreators(getListBankQuestion, dispatch),\n\t\tgetListCities: bindActionCreators(getListCities, dispatch)\n\t}\n}\nexport default connect(state => state, mapDispatchToProps)(QuestionBank)"]},"metadata":{},"sourceType":"module"}