{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tog-randy/Source/next.js/Chapter 2/next-pwa-withredux-master/pages/sampleBanner.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ContentBox from '../components/contentBox';\nimport SliderImageCard from '../components/cards/SliderImageCard';\nimport { Container, Row, Col } from 'reactstrap';\nimport { getListBanner } from '../components/actions';\n\nvar SampleBanner =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SampleBanner, _React$Component);\n\n  _createClass(SampleBanner, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, props, stores;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store;\n                props = {\n                  showHeader: true,\n                  showFooter: true\n                };\n                _context.next = 4;\n                return store.getState();\n\n              case 4:\n                stores = _context.sent;\n                _context.prev = 5;\n\n                if (stores.listBanner) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 9;\n                return store.dispatch(getListBanner());\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](5);\n                props.error = 'Unable to fetch AsyncData on server';\n\n              case 14:\n                return _context.abrupt(\"return\", props);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 11]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function SampleBanner(props) {\n    var _this;\n\n    _classCallCheck(this, SampleBanner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SampleBanner).call(this, props));\n    _this.state = {\n      title: props.companyName,\n      subTitle: \"Content Management System\",\n      showHeader: props.showHeader,\n      headerHeight: props.headerHeight,\n      navIsOpen: props.navIsOpen,\n      navMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n      navMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n      listBanners: props.listBanner\n    };\n    return _this;\n  }\n\n  _createClass(SampleBanner, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.setState({\n        listBanners: nextProps.listBanner,\n        navIsOpen: nextProps.navIsOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          showHeader = _this$state.showHeader,\n          headerHeight = _this$state.headerHeight,\n          navIsOpen = _this$state.navIsOpen,\n          navMinWidth = _this$state.navMinWidth,\n          navMaxWidth = _this$state.navMaxWidth,\n          listBanners = _this$state.listBanners;\n      return React.createElement(\"div\", {\n        role: \"main\",\n        className: \"animate-all fast bg-light\",\n        style: {\n          paddingTop: showHeader ? headerHeight : 0,\n          paddingLeft: navMinWidth,\n          overflowX: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"contentContainer px-4 pt-4 pb-2\",\n        style: {\n          marginLeft: navIsOpen ? navMaxWidth - navMinWidth : 0,\n          width: navIsOpen ? \"calc(100% - \".concat(navMaxWidth - navMinWidth, \"px)\") : '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(ContentBox, {\n        className: \"w-100 p-0 overflow-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(SliderImageCard, {\n        datas: listBanners,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return SampleBanner;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getListBanner: bindActionCreators(getListBanner, dispatch)\n  };\n};\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(SampleBanner);","map":{"version":3,"sources":["/home/tog-randy/Source/next.js/Chapter 2/next-pwa-withredux-master/pages/sampleBanner.js"],"names":["React","connect","bindActionCreators","ContentBox","SliderImageCard","Container","Row","Col","getListBanner","SampleBanner","store","props","showHeader","showFooter","getState","stores","listBanner","dispatch","error","state","title","companyName","subTitle","headerHeight","navIsOpen","navMaxWidth","navMinWidth","listBanners","nextProps","setState","paddingTop","paddingLeft","overflowX","marginLeft","width","Component","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport ContentBox from '../components/contentBox'\nimport SliderImageCard from '../components/cards/SliderImageCard'\nimport { Container, Row, Col } from 'reactstrap'\nimport { getListBanner } from '../components/actions'\n\nclass SampleBanner extends React.Component {\n\tstatic async getInitialProps({ store }) {\n\t\tlet props = { showHeader: true, showFooter: true }\n\t\tlet stores = await store.getState()\n\t\ttry {\n\t\t\tif(!stores.listBanner) await store.dispatch(getListBanner())\n\t\t} catch (e) {\n\t\t\tprops.error = 'Unable to fetch AsyncData on server'\n\t\t}\n\t\treturn props \n\t}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttitle: props.companyName,\n\t\t\tsubTitle: \"Content Management System\",\n\t\t\tshowHeader: props.showHeader,\n\t\t\theaderHeight: props.headerHeight,\n\t\t\tnavIsOpen: props.navIsOpen,\n\t\t\tnavMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n\t\t\tnavMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n\t\t\tlistBanners: props.listBanner\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tthis.setState({\n\t\t\tlistBanners: nextProps.listBanner,\n\t\t\tnavIsOpen: nextProps.navIsOpen\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { showHeader, headerHeight, navIsOpen, navMinWidth, navMaxWidth, listBanners } = this.state\n\t\treturn (\n\t\t\t<div \n\t\t\t\trole=\"main\" \n\t\t\t\tclassName=\"animate-all fast bg-light\"\n\t\t\t\tstyle={{\n\t\t\t\t\tpaddingTop: showHeader ? headerHeight : 0,\n\t\t\t\t\tpaddingLeft: navMinWidth,\n\t\t\t\t\toverflowX: \"hidden\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Container \n\t\t\t\t\tfluid \n\t\t\t\t\tclassName=\"contentContainer px-4 pt-4 pb-2\" \n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: navIsOpen ? navMaxWidth-navMinWidth : 0,\n\t\t\t\t\t\twidth: navIsOpen ? `calc(100% - ${navMaxWidth-navMinWidth}px)` : '100%'\n\t\t\t\t\t}}\n\t\t\t\t>\t\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"12\">\n\t\t\t\t\t\t\t<ContentBox className=\"w-100 p-0 overflow-auto\">\n\t\t\t\t\t\t\t\t<SliderImageCard datas={listBanners} />\n\t\t\t\t\t\t\t</ContentBox>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetListBanner: bindActionCreators(getListBanner, dispatch)\n\t}\n}\nexport default connect(state => state, mapDispatchToProps)(SampleBanner)"]},"metadata":{},"sourceType":"module"}