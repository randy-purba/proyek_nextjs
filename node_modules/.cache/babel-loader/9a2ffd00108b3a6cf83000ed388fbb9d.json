{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport { actionTypes } from '../types';\nimport cookie from 'js-cookie';\nvar token = cookie.get('token');\nvar API_URL = process.env.API_URL;\nvar API_DUMMY_URL = process.env.API_DUMMY_URL;\nexport var getListBankQuestion = function getListBankQuestion(page, len, dateFrom, dateTo, sortBy, nameVal) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var from, to, keywords, params, url, responses, headers, total, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                from = dateFrom ? \"&date_gte=\".concat(dateFrom) : '';\n                to = dateTo ? \"&date_lte=\".concat(dateTo) : '';\n                keywords = nameVal ? \"name_like=\".concat(nameVal, \"&\") : '';\n                params = \"\".concat(keywords, \"_start=\").concat(page * len, \"&_limit=\").concat(len).concat(from).concat(to, \"&_sort=\").concat(sortBy, \"&_order=desc\");\n                url = \"\".concat(API_DUMMY_URL, \"/bankQuestionData?\").concat(params);\n                _context.next = 7;\n                return fetch(url);\n\n              case 7:\n                responses = _context.sent;\n                _context.next = 10;\n                return responses.headers;\n\n              case 10:\n                headers = _context.sent;\n                _context.next = 13;\n                return headers.get('x-total-count');\n\n              case 13:\n                total = _context.sent;\n                dispatch(getTotalListBankQuestion(total));\n                _context.next = 17;\n                return responses.json();\n\n              case 17:\n                data = _context.sent;\n                return _context.abrupt(\"return\", dispatch({\n                  type: actionTypes.LIST_BANK_QUESTION,\n                  payload: data\n                }));\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar getTotalListBankQuestion = function getTotalListBankQuestion(data) {\n  return function (dispatch) {\n    return dispatch({\n      type: actionTypes.TOTAL_BANK_QUESTION,\n      payload: data\n    });\n  };\n};","map":{"version":3,"sources":["/home/tog-randy/Source/BCA/Project/components/actions/ListBankQuestionApi.js"],"names":["fetch","actionTypes","cookie","token","get","API_URL","process","env","API_DUMMY_URL","getListBankQuestion","page","len","dateFrom","dateTo","sortBy","nameVal","dispatch","from","to","keywords","params","url","responses","headers","total","getTotalListBankQuestion","json","data","type","LIST_BANK_QUESTION","payload","TOTAL_BANK_QUESTION"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,IAAMC,KAAK,GAAGD,MAAM,CAACE,GAAP,CAAW,OAAX,CAAd;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAA5B;AACA,IAAMG,aAAa,GAAGF,OAAO,CAACC,GAAR,CAAYC,aAAlC;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAOC,GAAP,EAAYC,QAAZ,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAkD,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3EC,gBAAAA,IAF2E,GAEpEL,QAAQ,uBAAgBA,QAAhB,IAA6B,EAF+B;AAG3EM,gBAAAA,EAH2E,GAGtEL,MAAM,uBAAgBA,MAAhB,IAA2B,EAHqC;AAI3EM,gBAAAA,QAJ2E,GAIhEJ,OAAO,uBAAgBA,OAAhB,SAA6B,EAJ4B;AAK3EK,gBAAAA,MAL2E,aAK/DD,QAL+D,oBAK7CT,IAAI,GAACC,GALwC,qBAK1BA,GAL0B,SAKpBM,IALoB,SAKbC,EALa,oBAKDJ,MALC;AAM3EO,gBAAAA,GAN2E,aAMlEb,aANkE,+BAMhCY,MANgC;AAAA;AAAA,uBAOzDpB,KAAK,CAACqB,GAAD,CAPoD;;AAAA;AAO3EC,gBAAAA,SAP2E;AAAA;AAAA,uBAQ3DA,SAAS,CAACC,OARiD;;AAAA;AAQ3EA,gBAAAA,OAR2E;AAAA;AAAA,uBAS7DA,OAAO,CAACnB,GAAR,CAAY,eAAZ,CAT6D;;AAAA;AAS3EoB,gBAAAA,KAT2E;AAUjFR,gBAAAA,QAAQ,CAACS,wBAAwB,CAACD,KAAD,CAAzB,CAAR;AAViF;AAAA,uBAW9DF,SAAS,CAACI,IAAV,EAX8D;;AAAA;AAW3EC,gBAAAA,IAX2E;AAAA,iDAY1EX,QAAQ,CAAC;AAAEY,kBAAAA,IAAI,EAAE3B,WAAW,CAAC4B,kBAApB;AAAwCC,kBAAAA,OAAO,EAAEH;AAAjD,iBAAD,CAZkE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAeP,IAAMF,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACE,IAAD;AAAA,SAAU,UAACX,QAAD,EAAc;AACrD,WAAOA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAE3B,WAAW,CAAC8B,mBAApB;AAAyCD,MAAAA,OAAO,EAAEH;AAAlD,KAAD,CAAf;AACH,GAFgC;AAAA,CAAjC","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { actionTypes } from '../types'\nimport cookie from 'js-cookie'\n\n\nconst token = cookie.get('token')\n\nconst API_URL = process.env.API_URL\nconst API_DUMMY_URL = process.env.API_DUMMY_URL\n\nexport const getListBankQuestion = (page, len, dateFrom, dateTo, sortBy, nameVal) => async (dispatch) => {\n    \n    const from = dateFrom ? `&date_gte=${dateFrom}` : ''\n    const to = dateTo ? `&date_lte=${dateTo}` : ''\n    const keywords = nameVal ? `name_like=${nameVal}&` : ''\n    const params = `${keywords}_start=${page*len}&_limit=${len}${from}${to}&_sort=${sortBy}&_order=desc`\n    const url = `${API_DUMMY_URL}/bankQuestionData?${params}`    \n    const responses = await fetch(url)\n    const headers = await responses.headers\n    const total = await headers.get('x-total-count')\n    dispatch(getTotalListBankQuestion(total))\n    const data = await responses.json()\n    return dispatch({ type: actionTypes.LIST_BANK_QUESTION, payload: data })\n}\n\nconst getTotalListBankQuestion = (data) => (dispatch) => {\n    return dispatch({ type: actionTypes.TOTAL_BANK_QUESTION, payload: data })\n}\n"]},"metadata":{},"sourceType":"module"}