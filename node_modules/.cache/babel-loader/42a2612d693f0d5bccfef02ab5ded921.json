{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/tog-randy/Source/BCA/Project/components/form/validateSelectForm.js\";\nimport React from \"react\";\nimport { AvField } from 'availity-reactstrap-validation';\nimport { FormGroup, Label } from 'reactstrap';\nexport default (function (props) {\n  return React.createElement(FormGroup, _extends({\n    className: \"mb-3 position-relative pt-0 \".concat(props.containerClassName ? props.containerClassName : '')\n  }, props.containerStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }), props.withLabel ? React.createElement(Label, {\n    for: props.formId,\n    className: props.labelClassName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.labelName) : \"\", React.createElement(AvField, {\n    type: \"select\",\n    name: props.formName,\n    value: props.formValue,\n    className: props.formClassName,\n    bsSize: props.formSize,\n    onChange: props.onChange,\n    errorMessage: props.formErrorMessage,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.formPlaceholder ? React.createElement(\"option\", {\n    key: 0,\n    value: 0,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.formPlaceholder) : \"\", props.formOptionData.map(function (data) {\n    return React.createElement(\"option\", {\n      key: data.id,\n      value: data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, data.name);\n  })));\n});","map":{"version":3,"sources":["/home/tog-randy/Source/BCA/Project/components/form/validateSelectForm.js"],"names":["AvField","FormGroup","Label","props","containerClassName","containerStyle","withLabel","formId","labelClassName","labelName","formName","formValue","formClassName","formSize","onChange","formErrorMessage","formPlaceholder","formOptionData","map","data","id","name"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,gCAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AAEA,gBAAe,UAACC,KAAD,EAAW;AACtB,SACI,oBAAC,SAAD;AACI,IAAA,SAAS,wCAAiCA,KAAK,CAACC,kBAAN,GAA2BD,KAAK,CAACC,kBAAjC,GAAsD,EAAvF;AADb,KAEQD,KAAK,CAACE,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKQF,KAAK,CAACG,SAAN,GACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEH,KAAK,CAACI,MAAlB;AAA0B,IAAA,SAAS,EAAEJ,KAAK,CAACK,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DL,KAAK,CAACM,SAAlE,CADA,GACuF,EAN/F,EAQI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAEN,KAAK,CAACO,QAFhB;AAGI,IAAA,KAAK,EAAEP,KAAK,CAACQ,SAHjB;AAII,IAAA,SAAS,EAAER,KAAK,CAACS,aAJrB;AAKI,IAAA,MAAM,EAAET,KAAK,CAACU,QALlB;AAMI,IAAA,QAAQ,EAAEV,KAAK,CAACW,QANpB;AAOI,IAAA,YAAY,EAAEX,KAAK,CAACY,gBAPxB;AAQI,IAAA,QAAQ,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWQZ,KAAK,CAACa,eAAN,GACA;AAAQ,IAAA,GAAG,EAAE,CAAb;AAAgB,IAAA,KAAK,EAAE,CAAvB;AAA0B,IAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCb,KAAK,CAACa,eAAxC,CADA,GACoE,EAZ5E,EAcKb,KAAK,CAACc,cAAN,CAAqBC,GAArB,CAAyB,UAACC,IAAD;AAAA,WAAU;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAlB;AAAsB,MAAA,KAAK,EAAED,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCD,IAAI,CAACE,IAA5C,CAAV;AAAA,GAAzB,CAdL,CARJ,CADJ;AA2BH,CA5BD","sourcesContent":["import { AvField } from 'availity-reactstrap-validation'\nimport { FormGroup, Label } from 'reactstrap'\n\nexport default (props) => {\n    return (\n        <FormGroup \n            className={`mb-3 position-relative pt-0 ${props.containerClassName ? props.containerClassName : ''}`}\n            {...props.containerStyle}\n        >\n            {\n                props.withLabel ?\n                <Label for={props.formId} className={props.labelClassName}>{props.labelName}</Label> : \"\"\n            }\n            <AvField \n                type=\"select\"\n                name={props.formName} \n                value={props.formValue}\n                className={props.formClassName} \n                bsSize={props.formSize}\n                onChange={props.onChange}\n                errorMessage={props.formErrorMessage} \n                required\n            >\n                {\n                    props.formPlaceholder ?\n                    <option key={0} value={0} hidden>{props.formPlaceholder}</option> : \"\"\n                }\n                {props.formOptionData.map((data) => <option key={data.id} value={data.id}>{data.name}</option>)}\n            </AvField>\n        </FormGroup>\n    )\n}"]},"metadata":{},"sourceType":"module"}