{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/tog-randy/Source/BCA/Project/pages/bankQuestion.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport TableBox from '../components/tables';\nimport Pagination from '../components/cards/PaginationCard';\nimport { getListTransaction } from '../components/actions';\nimport { timestampToDateTime, numberToCurrency, numberWithDot } from '../components/functions';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  _createClass(Dashboard, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, props, stores;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store;\n                props = {\n                  showHeader: true,\n                  showFooter: true,\n                  transanctionPage: 0,\n                  transactionMaxLen: 10\n                };\n                _context.next = 4;\n                return store.getState();\n\n              case 4:\n                stores = _context.sent;\n                _context.prev = 5;\n\n                if (stores.listTransaction) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 9;\n                return store.dispatch(getListTransaction(props.transanctionPage, props.transactionMaxLen));\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](5);\n                props.error = 'Unable to fetch AsyncData on server';\n\n              case 14:\n                return _context.abrupt(\"return\", props);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 11]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onPaginationClick\", function (page) {\n      var _this$state = _this.state,\n          transactionFetchLen = _this$state.transactionFetchLen,\n          transactionDateFrom = _this$state.transactionDateFrom,\n          transactionDateTo = _this$state.transactionDateTo,\n          transactionSortBy = _this$state.transactionSortBy,\n          transactionSearchKey = _this$state.transactionSearchKey;\n\n      _this.props.getListTransaction(page, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, transactionSearchKey);\n\n      _this.setState({\n        transactionPage: page\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterInit\", function (dateFrom, dateTo) {\n      var _this$state2 = _this.state,\n          transactionFetchLen = _this$state2.transactionFetchLen,\n          transactionSortBy = _this$state2.transactionSortBy,\n          transactionSearchKey = _this$state2.transactionSearchKey;\n\n      _this.props.getListTransaction(0, transactionFetchLen, dateFrom, dateTo, transactionSortBy, transactionSearchKey);\n\n      _this.setState({\n        transactionPage: 0,\n        transactionDateFrom: dateFrom,\n        transactionDateTo: dateTo\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortInit\", function (e) {\n      var target = e.target,\n          value = target.value;\n      var _this$state3 = _this.state,\n          transactionFetchLen = _this$state3.transactionFetchLen,\n          transactionDateFrom = _this$state3.transactionDateFrom,\n          transactionDateTo = _this$state3.transactionDateTo,\n          transactionSearchKey = _this$state3.transactionSearchKey;\n\n      _this.props.getListTransaction(0, transactionFetchLen, transactionDateFrom, transactionDateTo, value, transactionSearchKey);\n\n      _this.setState({\n        transactionPage: 0,\n        transactionSortBy: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSearchKeyword\", function (keywords) {\n      var _this$state4 = _this.state,\n          transactionPage = _this$state4.transactionPage,\n          transactionFetchLen = _this$state4.transactionFetchLen,\n          transactionDateFrom = _this$state4.transactionDateFrom,\n          transactionDateTo = _this$state4.transactionDateTo,\n          transactionSortBy = _this$state4.transactionSortBy;\n\n      _this.props.getListTransaction(transactionPage, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, keywords);\n\n      _this.setState({\n        transactionSearchKey: keywords\n      });\n    });\n\n    _this.state = {\n      title: props.companyName,\n      subTitle: \"Content Management System\",\n      showHeader: props.showHeader,\n      headerHeight: props.headerHeight,\n      navIsOpen: props.navIsOpen,\n      navMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n      navMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n      transactionPage: props.transanctionPage,\n      transactionFetchLen: props.transactionMaxLen,\n      transactionDateFrom: undefined,\n      transactionDateTo: undefined,\n      transactionSortBy: \"date\",\n      transactionSearchKey: \"\",\n      listTransaction: props.listTransaction,\n      totalTransaction: props.totalTransaction\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.setState({\n        navIsOpen: nextProps.navIsOpen,\n        listTransaction: nextProps.listTransaction,\n        totalTransaction: nextProps.totalTransaction,\n        lineChart: nextProps.lineChart\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state5 = this.state,\n          showHeader = _this$state5.showHeader,\n          headerHeight = _this$state5.headerHeight,\n          navIsOpen = _this$state5.navIsOpen,\n          navMinWidth = _this$state5.navMinWidth,\n          navMaxWidth = _this$state5.navMaxWidth,\n          listTransaction = _this$state5.listTransaction,\n          totalTransaction = _this$state5.totalTransaction,\n          transactionPage = _this$state5.transactionPage,\n          transactionFetchLen = _this$state5.transactionFetchLen,\n          transactionSortBy = _this$state5.transactionSortBy;\n      return React.createElement(\"div\", {\n        role: \"main\",\n        className: \"animate-all fast bg-light\",\n        style: {\n          paddingTop: showHeader ? headerHeight : 0,\n          paddingLeft: navMinWidth,\n          overflowX: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"contentContainer px-4 pt-4 pb-2\",\n        style: {\n          marginLeft: navIsOpen ? navMaxWidth - navMinWidth : 0,\n          width: navIsOpen ? \"calc(100% - \".concat(navMaxWidth - navMinWidth, \"px)\") : '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TableBox, {\n        title: \"Today's Item Sales\",\n        isResponsive: true,\n        tHead: [\"#\", \"Item Name\", \"QTY\", \"Item Price\", \"Total Price\", \"Buy Date\"],\n        sortItems: [{\n          id: \"name\",\n          name: \"Item Name\"\n        }, {\n          id: \"qty\",\n          name: \"Quantity\"\n        }, {\n          id: \"price\",\n          name: \"Item Price\"\n        }, {\n          id: \"total\",\n          name: \"Total Price\"\n        }, {\n          id: \"date\",\n          name: \"Buy Date\"\n        }],\n        onSortClick: this.onSortInit,\n        sortValue: transactionSortBy,\n        deepSearch: true,\n        maxRangeDateFilter: 5,\n        exportToFile: true,\n        exportData: listTransaction,\n        exportFileName: \"Transaction\".concat(new Date().getTime()),\n        onFilterClick: this.onFilterInit,\n        onKeySearch: this.onSearchKeyword,\n        noResult: listTransaction.length === 0,\n        pagination: React.createElement(Pagination, {\n          ariaLabel: \"Page navigation\",\n          size: \"sm\",\n          totalContent: totalTransaction,\n          currentPage: transactionPage,\n          contentMaxLength: transactionFetchLen,\n          onClick: this.onPaginationClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, listTransaction.map(function (data, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, key + 1 + transactionPage * transactionFetchLen), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, data.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, data.qty), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, numberToCurrency(data.price, data.currency, false)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, numberToCurrency(data.qty * data.price, data.currency, false)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, timestampToDateTime(data.date, false)));\n      }))))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getListTransaction: bindActionCreators(getListTransaction, dispatch)\n  };\n};\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/home/tog-randy/Source/BCA/Project/pages/bankQuestion.js"],"names":["React","connect","bindActionCreators","Container","Row","Col","TableBox","Pagination","getListTransaction","timestampToDateTime","numberToCurrency","numberWithDot","Dashboard","store","props","showHeader","showFooter","transanctionPage","transactionMaxLen","getState","stores","listTransaction","dispatch","error","page","state","transactionFetchLen","transactionDateFrom","transactionDateTo","transactionSortBy","transactionSearchKey","setState","transactionPage","dateFrom","dateTo","e","target","value","keywords","title","companyName","subTitle","headerHeight","navIsOpen","navMaxWidth","navMinWidth","undefined","totalTransaction","nextProps","lineChart","paddingTop","paddingLeft","overflowX","marginLeft","width","id","name","onSortInit","Date","getTime","onFilterInit","onSearchKeyword","length","onPaginationClick","map","data","key","qty","price","currency","date","Component","mapDispatchToProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,aAAhD,QAAqE,yBAArE;;IAEMC,S;;;;;;;;;;;;;;;;AAC0BC,gBAAAA,K,QAAAA,K;AAC1BC,gBAAAA,K,GAAQ;AAAEC,kBAAAA,UAAU,EAAE,IAAd;AAAoBC,kBAAAA,UAAU,EAAE,IAAhC;AAAsCC,kBAAAA,gBAAgB,EAAE,CAAxD;AAA2DC,kBAAAA,iBAAiB,EAAE;AAA9E,iB;;uBACOL,KAAK,CAACM,QAAN,E;;;AAAfC,gBAAAA,M;;;oBAGCA,MAAM,CAACC,e;;;;;;uBAAuBR,KAAK,CAACS,QAAN,CAAed,kBAAkB,CAACM,KAAK,CAACG,gBAAP,EAAyBH,KAAK,CAACI,iBAA/B,CAAjC,C;;;;;;;;;AAGlCJ,gBAAAA,KAAK,CAACS,KAAN,GAAc,qCAAd;;;iDAEMT,K;;;;;;;;;;;;;;;;;;AAGR,qBAAYA,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,mFAAMA,KAAN;;AADkB,wEA8BC,UAACU,IAAD,EAAU;AAAA,wBACoF,MAAKC,KADzF;AAAA,UACrBC,mBADqB,eACrBA,mBADqB;AAAA,UACAC,mBADA,eACAA,mBADA;AAAA,UACqBC,iBADrB,eACqBA,iBADrB;AAAA,UACwCC,iBADxC,eACwCA,iBADxC;AAAA,UAC2DC,oBAD3D,eAC2DA,oBAD3D;;AAE7B,YAAKhB,KAAL,CAAWN,kBAAX,CAA8BgB,IAA9B,EAAoCE,mBAApC,EAAyDC,mBAAzD,EAA8EC,iBAA9E,EAAiGC,iBAAjG,EAAoHC,oBAApH;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAER;AAAlB,OAAd;AACA,KAlCkB;;AAAA,mEAoCJ,UAACS,QAAD,EAAWC,MAAX,EAAsB;AAAA,yBACqC,MAAKT,KAD1C;AAAA,UAC5BC,mBAD4B,gBAC5BA,mBAD4B;AAAA,UACPG,iBADO,gBACPA,iBADO;AAAA,UACYC,oBADZ,gBACYA,oBADZ;;AAEpC,YAAKhB,KAAL,CAAWN,kBAAX,CAA8B,CAA9B,EAAiCkB,mBAAjC,EAAsDO,QAAtD,EAAgEC,MAAhE,EAAwEL,iBAAxE,EAA2FC,oBAA3F;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAE,CAAlB;AAAqBL,QAAAA,mBAAmB,EAAEM,QAA1C;AAAoDL,QAAAA,iBAAiB,EAAEM;AAAvE,OAAd;AACA,KAxCkB;;AAAA,iEA0CN,UAACC,CAAD,EAAO;AACnB,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AAAA,UAAyBC,KAAK,GAAGD,MAAM,CAACC,KAAxC;AADmB,yBAE2E,MAAKZ,KAFhF;AAAA,UAEXC,mBAFW,gBAEXA,mBAFW;AAAA,UAEUC,mBAFV,gBAEUA,mBAFV;AAAA,UAE+BC,iBAF/B,gBAE+BA,iBAF/B;AAAA,UAEkDE,oBAFlD,gBAEkDA,oBAFlD;;AAGnB,YAAKhB,KAAL,CAAWN,kBAAX,CAA8B,CAA9B,EAAiCkB,mBAAjC,EAAsDC,mBAAtD,EAA2EC,iBAA3E,EAA8FS,KAA9F,EAAqGP,oBAArG;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAE,CAAlB;AAAqBH,QAAAA,iBAAiB,EAAEQ;AAAxC,OAAd;AACA,KA/CkB;;AAAA,sEAiDD,UAACC,QAAD,EAAc;AAAA,yBAC6E,MAAKb,KADlF;AAAA,UACvBO,eADuB,gBACvBA,eADuB;AAAA,UACNN,mBADM,gBACNA,mBADM;AAAA,UACeC,mBADf,gBACeA,mBADf;AAAA,UACoCC,iBADpC,gBACoCA,iBADpC;AAAA,UACuDC,iBADvD,gBACuDA,iBADvD;;AAE/B,YAAKf,KAAL,CAAWN,kBAAX,CAA8BwB,eAA9B,EAA+CN,mBAA/C,EAAoEC,mBAApE,EAAyFC,iBAAzF,EAA4GC,iBAA5G,EAA+HS,QAA/H;;AACA,YAAKP,QAAL,CAAc;AAACD,QAAAA,oBAAoB,EAAEQ;AAAvB,OAAd;AACA,KArDkB;;AAElB,UAAKb,KAAL,GAAa;AACZc,MAAAA,KAAK,EAAEzB,KAAK,CAAC0B,WADD;AAEZC,MAAAA,QAAQ,EAAE,2BAFE;AAGZ1B,MAAAA,UAAU,EAAED,KAAK,CAACC,UAHN;AAIZ2B,MAAAA,YAAY,EAAE5B,KAAK,CAAC4B,YAJR;AAKZC,MAAAA,SAAS,EAAE7B,KAAK,CAAC6B,SALL;AAMZC,MAAAA,WAAW,EAAE9B,KAAK,CAACC,UAAN,GAAmBD,KAAK,CAAC8B,WAAzB,GAAuC,KANxC;AAOZC,MAAAA,WAAW,EAAE/B,KAAK,CAACC,UAAN,GAAmBD,KAAK,CAAC+B,WAAzB,GAAuC,KAPxC;AAQZb,MAAAA,eAAe,EAAElB,KAAK,CAACG,gBARX;AASZS,MAAAA,mBAAmB,EAAEZ,KAAK,CAACI,iBATf;AAUZS,MAAAA,mBAAmB,EAAEmB,SAVT;AAWZlB,MAAAA,iBAAiB,EAAEkB,SAXP;AAYZjB,MAAAA,iBAAiB,EAAE,MAZP;AAaZC,MAAAA,oBAAoB,EAAE,EAbV;AAcZT,MAAAA,eAAe,EAAEP,KAAK,CAACO,eAdX;AAeZ0B,MAAAA,gBAAgB,EAAEjC,KAAK,CAACiC;AAfZ,KAAb;AAFkB;AAmBlB;;;;qDAEgCC,S,EAAW;AAC3C,WAAKjB,QAAL,CAAc;AACbY,QAAAA,SAAS,EAAEK,SAAS,CAACL,SADR;AAEbtB,QAAAA,eAAe,EAAE2B,SAAS,CAAC3B,eAFd;AAGb0B,QAAAA,gBAAgB,EAAEC,SAAS,CAACD,gBAHf;AAIbE,QAAAA,SAAS,EAAED,SAAS,CAACC;AAJR,OAAd;AAMA;;;6BA2BQ;AAAA,yBAIJ,KAAKxB,KAJD;AAAA,UAEPV,UAFO,gBAEPA,UAFO;AAAA,UAEK2B,YAFL,gBAEKA,YAFL;AAAA,UAEmBC,SAFnB,gBAEmBA,SAFnB;AAAA,UAE8BE,WAF9B,gBAE8BA,WAF9B;AAAA,UAE2CD,WAF3C,gBAE2CA,WAF3C;AAAA,UAGPvB,eAHO,gBAGPA,eAHO;AAAA,UAGU0B,gBAHV,gBAGUA,gBAHV;AAAA,UAG4Bf,eAH5B,gBAG4BA,eAH5B;AAAA,UAG6CN,mBAH7C,gBAG6CA,mBAH7C;AAAA,UAGkEG,iBAHlE,gBAGkEA,iBAHlE;AAMR,aACC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,SAAS,EAAC,2BAFX;AAGC,QAAA,KAAK,EAAE;AACNqB,UAAAA,UAAU,EAAEnC,UAAU,GAAG2B,YAAH,GAAkB,CADlC;AAENS,UAAAA,WAAW,EAAEN,WAFP;AAGNO,UAAAA,SAAS,EAAE;AAHL,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASC,oBAAC,SAAD;AACC,QAAA,KAAK,MADN;AAEC,QAAA,SAAS,EAAC,iCAFX;AAGC,QAAA,KAAK,EAAE;AACNC,UAAAA,UAAU,EAAEV,SAAS,GAAGC,WAAW,GAACC,WAAf,GAA6B,CAD5C;AAENS,UAAAA,KAAK,EAAEX,SAAS,yBAAkBC,WAAW,GAACC,WAA9B,WAAiD;AAF3D,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AACC,QAAA,KAAK,EAAC,oBADP;AAEC,QAAA,YAAY,EAAE,IAFf;AAGC,QAAA,KAAK,EAAE,CAAC,GAAD,EAAM,WAAN,EAAmB,KAAnB,EAA0B,YAA1B,EAAwC,aAAxC,EAAuD,UAAvD,CAHR;AAIC,QAAA,SAAS,EAAE,CACV;AAAEU,UAAAA,EAAE,EAAE,MAAN;AAAcC,UAAAA,IAAI,EAAE;AAApB,SADU,EAEV;AAAED,UAAAA,EAAE,EAAE,KAAN;AAAaC,UAAAA,IAAI,EAAE;AAAnB,SAFU,EAGV;AAAED,UAAAA,EAAE,EAAE,OAAN;AAAeC,UAAAA,IAAI,EAAE;AAArB,SAHU,EAIV;AAAED,UAAAA,EAAE,EAAE,OAAN;AAAeC,UAAAA,IAAI,EAAE;AAArB,SAJU,EAKV;AAAED,UAAAA,EAAE,EAAE,MAAN;AAAcC,UAAAA,IAAI,EAAE;AAApB,SALU,CAJZ;AAWC,QAAA,WAAW,EAAE,KAAKC,UAXnB;AAYC,QAAA,SAAS,EAAE5B,iBAZZ;AAaC,QAAA,UAAU,EAAE,IAbb;AAcC,QAAA,kBAAkB,EAAE,CAdrB;AAeC,QAAA,YAAY,EAAE,IAff;AAgBC,QAAA,UAAU,EAAER,eAhBb;AAiBC,QAAA,cAAc,uBAAiB,IAAIqC,IAAJ,EAAD,CAAaC,OAAb,EAAhB,CAjBf;AAkBC,QAAA,aAAa,EAAE,KAAKC,YAlBrB;AAmBC,QAAA,WAAW,EAAE,KAAKC,eAnBnB;AAoBC,QAAA,QAAQ,EAAExC,eAAe,CAACyC,MAAhB,KAA2B,CApBtC;AAqBC,QAAA,UAAU,EACT,oBAAC,UAAD;AACC,UAAA,SAAS,EAAC,iBADX;AAEC,UAAA,IAAI,EAAC,IAFN;AAGC,UAAA,YAAY,EAAEf,gBAHf;AAIC,UAAA,WAAW,EAAEf,eAJd;AAKC,UAAA,gBAAgB,EAAEN,mBALnB;AAMC,UAAA,OAAO,EAAE,KAAKqC,iBANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiCE1C,eAAe,CAAC2C,GAAhB,CAAoB,UAACC,IAAD,EAAOC,GAAP;AAAA,eACnB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,GAAG,GAAG,CAAP,GAAclC,eAAe,GAAGN,mBADlC,CADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKuC,IAAI,CAACT,IAAV,CAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKS,IAAI,CAACE,GAAV,CALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEzD,gBAAgB,CAACuD,IAAI,CAACG,KAAN,EAAaH,IAAI,CAACI,QAAlB,EAA4B,KAA5B,CADlB,CAND,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE3D,gBAAgB,CAAEuD,IAAI,CAACE,GAAL,GAAWF,IAAI,CAACG,KAAlB,EAA0BH,IAAI,CAACI,QAA/B,EAAyC,KAAzC,CADlB,CATD,EAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE5D,mBAAmB,CAACwD,IAAI,CAACK,IAAN,EAAY,KAAZ,CADrB,CAZD,CADmB;AAAA,OAApB,CAjCF,CADD,CADD,CARD,CATD,CADD;AA8EA;;;;EAzJsBtE,KAAK,CAACuE,S;;AA4J9B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAlD,QAAQ,EAAI;AACtC,SAAO;AACNd,IAAAA,kBAAkB,EAAEN,kBAAkB,CAACM,kBAAD,EAAqBc,QAArB;AADhC,GAAP;AAGA,CAJD;;AAKA,eAAerB,OAAO,CAAC,UAAAwB,KAAK;AAAA,SAAIA,KAAJ;AAAA,CAAN,EAAiB+C,kBAAjB,CAAP,CAA4C5D,SAA5C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Container, Row, Col } from 'reactstrap'\nimport TableBox from '../components/tables'\nimport Pagination from '../components/cards/PaginationCard'\nimport { getListTransaction } from '../components/actions'\nimport { timestampToDateTime, numberToCurrency, numberWithDot } from '../components/functions'\n\nclass Dashboard extends React.Component {\n\tstatic async getInitialProps({ store }) {\n\t\tlet props = { showHeader: true, showFooter: true, transanctionPage: 0, transactionMaxLen: 10 }\n\t\tlet stores = await store.getState()\n\t\ttry {\n\t\t\t// Scope List Transaction\n\t\t\tif(!stores.listTransaction) await store.dispatch(getListTransaction(props.transanctionPage, props.transactionMaxLen))\n\n\t\t} catch (e) {\n\t\t\tprops.error = 'Unable to fetch AsyncData on server'\n\t\t}\n\t\treturn props\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttitle: props.companyName,\n\t\t\tsubTitle: \"Content Management System\",\n\t\t\tshowHeader: props.showHeader,\n\t\t\theaderHeight: props.headerHeight,\n\t\t\tnavIsOpen: props.navIsOpen,\n\t\t\tnavMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n\t\t\tnavMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n\t\t\ttransactionPage: props.transanctionPage,\n\t\t\ttransactionFetchLen: props.transactionMaxLen,\n\t\t\ttransactionDateFrom: undefined,\n\t\t\ttransactionDateTo: undefined,\n\t\t\ttransactionSortBy: \"date\",\n\t\t\ttransactionSearchKey: \"\",\n\t\t\tlistTransaction: props.listTransaction,\n\t\t\ttotalTransaction: props.totalTransaction\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tthis.setState({\n\t\t\tnavIsOpen: nextProps.navIsOpen,\n\t\t\tlistTransaction: nextProps.listTransaction,\n\t\t\ttotalTransaction: nextProps.totalTransaction,\n\t\t\tlineChart: nextProps.lineChart\n\t\t})\n\t}\n\n\tonPaginationClick = (page) => {\n\t\tconst { transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, transactionSearchKey } = this.state\n\t\tthis.props.getListTransaction(page, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, transactionSearchKey)\n\t\tthis.setState({transactionPage: page})\n\t}\n\n\tonFilterInit = (dateFrom, dateTo) => {\n\t\tconst { transactionFetchLen, transactionSortBy, transactionSearchKey } = this.state\n\t\tthis.props.getListTransaction(0, transactionFetchLen, dateFrom, dateTo, transactionSortBy, transactionSearchKey)\n\t\tthis.setState({transactionPage: 0, transactionDateFrom: dateFrom, transactionDateTo: dateTo})\n\t}\n\n\tonSortInit = (e) => {\n\t\tconst target = e.target, value = target.value\n\t\tconst { transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSearchKey } = this.state\n\t\tthis.props.getListTransaction(0, transactionFetchLen, transactionDateFrom, transactionDateTo, value, transactionSearchKey)\n\t\tthis.setState({transactionPage: 0, transactionSortBy: value})\n\t}\n\n\tonSearchKeyword = (keywords) => {\n\t\tconst { transactionPage, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy } = this.state\n\t\tthis.props.getListTransaction(transactionPage, transactionFetchLen, transactionDateFrom, transactionDateTo, transactionSortBy, keywords)\n\t\tthis.setState({transactionSearchKey: keywords})\n\t}\n\n\trender() {\n\t\tconst { \n\t\t\tshowHeader, headerHeight, navIsOpen, navMinWidth, navMaxWidth, \n\t\t\tlistTransaction, totalTransaction, transactionPage, transactionFetchLen, transactionSortBy\n\t\t} = this.state\n\t\t\n\t\treturn (\n\t\t\t<div \n\t\t\t\trole=\"main\" \n\t\t\t\tclassName=\"animate-all fast bg-light\"\n\t\t\t\tstyle={{\n\t\t\t\t\tpaddingTop: showHeader ? headerHeight : 0,\n\t\t\t\t\tpaddingLeft: navMinWidth,\n\t\t\t\t\toverflowX: \"hidden\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Container \n\t\t\t\t\tfluid \n\t\t\t\t\tclassName=\"contentContainer px-4 pt-4 pb-2\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: navIsOpen ? navMaxWidth-navMinWidth : 0,\n\t\t\t\t\t\twidth: navIsOpen ? `calc(100% - ${navMaxWidth-navMinWidth}px)` : '100%'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t<TableBox \n\t\t\t\t\t\t\t\ttitle=\"Today's Item Sales\" \n\t\t\t\t\t\t\t\tisResponsive={true} \n\t\t\t\t\t\t\t\ttHead={[\"#\", \"Item Name\", \"QTY\", \"Item Price\", \"Total Price\", \"Buy Date\"]}\n\t\t\t\t\t\t\t\tsortItems={[\n\t\t\t\t\t\t\t\t\t{ id: \"name\", name: \"Item Name\"}, \n\t\t\t\t\t\t\t\t\t{ id: \"qty\", name: \"Quantity\" }, \n\t\t\t\t\t\t\t\t\t{ id: \"price\", name: \"Item Price\" }, \n\t\t\t\t\t\t\t\t\t{ id: \"total\", name: \"Total Price\"}, \n\t\t\t\t\t\t\t\t\t{ id: \"date\", name: \"Buy Date\" }\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\tonSortClick={this.onSortInit}\n\t\t\t\t\t\t\t\tsortValue={transactionSortBy}\n\t\t\t\t\t\t\t\tdeepSearch={true}\n\t\t\t\t\t\t\t\tmaxRangeDateFilter={5}\n\t\t\t\t\t\t\t\texportToFile={true}\n\t\t\t\t\t\t\t\texportData={listTransaction}\n\t\t\t\t\t\t\t\texportFileName={`Transaction${(new Date()).getTime()}`}\n\t\t\t\t\t\t\t\tonFilterClick={this.onFilterInit}\n\t\t\t\t\t\t\t\tonKeySearch={this.onSearchKeyword}\n\t\t\t\t\t\t\t\tnoResult={listTransaction.length === 0}\n\t\t\t\t\t\t\t\tpagination={\n\t\t\t\t\t\t\t\t\t<Pagination \n\t\t\t\t\t\t\t\t\t\tariaLabel=\"Page navigation\"\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\ttotalContent={totalTransaction}\n\t\t\t\t\t\t\t\t\t\tcurrentPage={transactionPage}\n\t\t\t\t\t\t\t\t\t\tcontentMaxLength={transactionFetchLen}\n\t\t\t\t\t\t\t\t\t\tonClick={this.onPaginationClick}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlistTransaction.map((data, key) => (\n\t\t\t\t\t\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t{(key + 1) +  (transactionPage * transactionFetchLen)}\n\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>{data.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{data.qty}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{numberToCurrency(data.price, data.currency, false)}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{numberToCurrency((data.qty * data.price), data.currency, false)}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{timestampToDateTime(data.date, false)}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</TableBox>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetListTransaction: bindActionCreators(getListTransaction, dispatch)\n\t}\n}\nexport default connect(state => state, mapDispatchToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}