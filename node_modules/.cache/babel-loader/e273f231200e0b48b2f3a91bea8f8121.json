{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport oauth from 'axios-oauth-client';\nimport { Container, Button } from 'reactstrap';\nimport { AvForm } from 'availity-reactstrap-validation';\nimport FormInputValidation from '../components/form/validateInputForm';\nimport LoaderCard from '../components/cards/LoaderCard';\nimport { regexHtmlTag } from '../components/functions';\nimport { userLogin } from '../components/actions';\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  _createClass(Home, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var props;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                props = {\n                  showHeader: false,\n                  showFooter: false\n                };\n\n                try {// props.withHeader = false\n                } catch (e) {\n                  props.error = 'Unable to fetch AsyncData on server';\n                }\n\n                return _context.abrupt(\"return\", props);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var target = e.target,\n          value = target.value,\n          name = target.name;\n\n      _this.setState(_defineProperty({}, name, regexHtmlTag(value)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, email, password, onFetch, getAuthorizationCode, response;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password, onFetch = _this$state.onFetch;\n\n              if (onFetch) {\n                _context2.next = 16;\n                break;\n              }\n\n              _this.setState({\n                onFetch: true\n              });\n\n              _context2.prev = 3;\n              getAuthorizationCode = oauth.client(axios.create(), {\n                url: \"\".concat(process.env.API_URL, \"/oauth/token\"),\n                grant_type: \"password\",\n                client_id: process.env.API_CLIENT_ID,\n                client_secret: process.env.API_CLIENT_SECRET,\n                username: email,\n                password: password\n              });\n              _context2.next = 7;\n              return getAuthorizationCode();\n\n            case 7:\n              response = _context2.sent;\n              userLogin(response);\n              _context2.next = 16;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n\n              _this.setState({\n                onFetch: false\n              });\n\n              console.error(\"You have an error in your code or there are Network issues.\", _context2.t0);\n              throw new Error(_context2.t0);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11]]);\n    })));\n\n    _this.state = {\n      email: '',\n      password: '',\n      licensed: props.cmsLicensed,\n      title: props.companyName,\n      subTitle: \"Content Management System\",\n      showHeader: props.showHeader,\n      onFetch: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          showHeader = _this$state2.showHeader,\n          headerHeight = _this$state2.headerHeight,\n          licensed = _this$state2.licensed,\n          title = _this$state2.title,\n          subTitle = _this$state2.subTitle,\n          onFetch = _this$state2.onFetch;\n      return React.createElement(\"div\", {\n        role: \"main\",\n        style: {\n          paddingTop: showHeader ? headerHeight : 0\n        }\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"loginBox absolute-center bg-light p-3\",\n        style: {\n          maxWidth: \"375px\"\n        }\n      }, React.createElement(\"div\", {\n        className: \"p-3\"\n      }, React.createElement(\"div\", {\n        className: \"w-100 text-center\"\n      }, React.createElement(\"h5\", {\n        style: {\n          padding: \"6px 8px\"\n        },\n        className: \"text-center bg-danger d-inline-block rounded-circle mb-0\"\n      }, React.createElement(\"span\", {\n        className: \"icon-lock font-22 text-white\"\n      }))), React.createElement(\"h4\", {\n        className: \"text-center mb-0 mt-2 pt-1\"\n      }, title), React.createElement(\"p\", {\n        className: \"text-center font-12 mb-3\"\n      }, subTitle), React.createElement(AvForm, {\n        onValidSubmit: this.handleSubmit,\n        method: \"post\",\n        autoComplete: \"off\"\n      }, React.createElement(FormInputValidation, {\n        withLabel: true,\n        labelName: \"Alamat Email\",\n        labelClassName: \"inputLabel position-absolute font-12 text-primary bg-light\",\n        formClassName: \"py-4 px-2 bg-light mb-0\",\n        formId: \"yourEmail\",\n        formType: \"email\",\n        formName: \"email\",\n        formPlaceholder: \"Masukan alamat email\",\n        formErrorMessage: \"Alamat email salah\",\n        onChange: this.handleChange,\n        formValidate: {\n          required: {\n            value: true,\n            errorMessage: 'Alamat email tidak boleh kosong'\n          },\n          email: true\n        }\n      }), React.createElement(FormInputValidation, {\n        withLabel: true,\n        labelName: \"Kata Kunci\",\n        labelClassName: \"inputLabel position-absolute font-12 text-primary bg-light\",\n        formClassName: \"py-4 px-2 bg-light mb-0\",\n        formId: \"yourPassword\",\n        formType: \"password\",\n        formName: \"password\",\n        formPlaceholder: \"Masukan kata kunci\",\n        formErrorMessage: \"Alamat email salah\",\n        onChange: this.handleChange,\n        formValidate: {\n          required: {\n            value: true,\n            errorMessage: 'Kata kunci tidak boleh kosong'\n          }\n        }\n      }), !onFetch ? React.createElement(Button, {\n        block: true,\n        color: \"primary\",\n        type: \"submit\",\n        className: \"mt-4 mb-3 text-uppercase font-12\"\n      }, \"Masuk\") : React.createElement(Button, {\n        block: true,\n        color: \"primary\",\n        className: \"mt-4 mb-3 text-uppercase font-12\"\n      }, React.createElement(LoaderCard, {\n        className: \"position-relative d-block w-100 text-center\",\n        style: {\n          height: \"100%\",\n          padding: \"9px 0\"\n        },\n        height: \"100%\",\n        loaderColor: \"light\",\n        loaderSize: \"sm\"\n      })), React.createElement(Link, {\n        href: \"/resetPassword\",\n        as: \"/reset\"\n      }, React.createElement(\"a\", {\n        style: {\n          width: \"120px\"\n        },\n        className: \"m-auto mt-2 d-block text-center text-primary font-12\"\n      }, \"Lupa kata kunci?\"))), React.createElement(\"div\", {\n        className: \"text-center text-secondary mt-4\"\n      }, React.createElement(\"p\", {\n        className: \"font-12 mb-0\",\n        dangerouslySetInnerHTML: {\n          __html: licensed\n        }\n      })))));\n    }\n  }]);\n\n  return Home;\n}(React.Component); // const mapDispatchToProps = dispatch => {\n// \treturn {\n// \t\tuserLogin: bindActionCreators(userLogin, dispatch)\n// \t}\n// }\n\n\nexport default connect(function (state) {\n  return state;\n}, {})(Home);","map":null,"metadata":{},"sourceType":"module"}