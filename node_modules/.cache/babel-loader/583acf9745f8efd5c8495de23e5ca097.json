{"ast":null,"code":"import React from \"react\";\nimport { Container, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nexport default (function (props) {\n  var size = props.size,\n      ariaLabel = props.ariaLabel,\n      totalContent = props.totalContent,\n      currentPage = props.currentPage,\n      contentMaxLength = props.contentMaxLength,\n      _onClick = props.onClick;\n  var totalPage = Math.ceil(totalContent / contentMaxLength);\n\n  var generatePagination = function generatePagination() {\n    var lists = [],\n        current = currentPage + 1,\n        delta = 2,\n        left = current - delta,\n        right = current + delta + 1,\n        range = [],\n        rangeWithDots = [],\n        l;\n\n    for (var i = 1; i <= totalPage; i++) {\n      if (i == 1 || i == totalPage || i >= left && i < right) {\n        range.push(i);\n      }\n    }\n\n    for (var _i = 0, _range = range; _i < _range.length; _i++) {\n      var _i3 = _range[_i];\n\n      if (l) {\n        if (_i3 - l === 2) {\n          rangeWithDots.push(l + 1);\n        } else if (_i3 - l !== 1) {\n          rangeWithDots.push('...');\n        }\n      }\n\n      rangeWithDots.push(_i3);\n      l = _i3;\n    }\n\n    var _loop = function _loop() {\n      var i = _rangeWithDots[_i2];\n      var btn = i == '...' ? React.createElement(PaginationItem, {\n        key: i\n      }, React.createElement(PaginationLink, null, i)) : React.createElement(PaginationItem, {\n        key: i,\n        onClick: function onClick() {\n          return _onClick(i - 1);\n        },\n        className: i === current ? 'active' : ''\n      }, React.createElement(PaginationLink, null, i));\n      lists.push(btn);\n    };\n\n    for (var _i2 = 0, _rangeWithDots = rangeWithDots; _i2 < _rangeWithDots.length; _i2++) {\n      _loop();\n    }\n\n    return lists;\n  };\n\n  return React.createElement(Container, {\n    fluid: true,\n    className: \"w-100 d-inline-block p-0 mt-1\"\n  }, React.createElement(Pagination, {\n    size: size,\n    \"aria-label\": ariaLabel\n  }, currentPage > 0 ? React.createElement(PaginationItem, null, React.createElement(PaginationLink, {\n    onClick: function onClick() {\n      return _onClick(0);\n    }\n  }, React.createElement(\"i\", {\n    className: \"font-12 icon-chevron-left\"\n  }))) : \"\", generatePagination(), currentPage + 1 < totalPage ? React.createElement(PaginationItem, null, React.createElement(PaginationLink, {\n    onClick: function onClick() {\n      return _onClick(totalPage - 1);\n    }\n  }, React.createElement(\"i\", {\n    className: \"font-12 icon-chevron-right\"\n  }))) : \"\"));\n});","map":null,"metadata":{},"sourceType":"module"}