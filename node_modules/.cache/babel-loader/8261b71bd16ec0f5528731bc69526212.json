{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tog-randy/Source/BCA/Project/components/fragments/question/questionForm.js\";\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { AvForm } from 'availity-reactstrap-validation';\nimport { Table, Row, Col, Button } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport FormSelect from '../../form/selectForm';\nimport FormInput from '../../form/inputForm';\nimport FormInputValidation from '../../form/validateInputForm';\nimport FormSelectValidation from '../../form/validateSelectForm';\nimport Workbook from 'react-excel-workbook';\nimport { addDays, timestampToDateTime } from '../../functions';\nexport default (function (props) {\n  var title = props.title,\n      tHead = props.tHead,\n      children = props.children,\n      pagination = props.pagination,\n      noResult = props.noResult,\n      deepSearch = props.deepSearch,\n      onFilterClick = props.onFilterClick,\n      onKeySearch = props.onKeySearch,\n      exportToFile = props.exportToFile,\n      exportData = props.exportData,\n      exportFileName = props.exportFileName,\n      sortItems = props.sortItems,\n      sortValue = props.sortValue,\n      onSortClick = props.onSortClick,\n      maxRangeDateFilter = props.maxRangeDateFilter,\n      listZone = props.listZone,\n      listQuestionType = props.listQuestionType;\n  console.log('%c üçø listZone: ', 'font-size:20px;background-color: #FCA650;color:#fff;', listZone);\n  console.log('%c üçÖ sortItems: ', 'font-size:20px;background-color: #EA7E5C;color:#fff;', sortItems);\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(new Date(startDate)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endDate = _useState4[0],\n      setEndDate = _useState4[1];\n\n  var _useState5 = useState({\n    keywords: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputs = _useState6[0],\n      setInputs = _useState6[1];\n\n  var _useState7 = useState({\n    typeFile: undefined\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      saveType = _useState8[0],\n      setSaveType = _useState8[1];\n\n  var saveTypeOption = [{\n    id: 1,\n    name: \"EXCEL\"\n  }, {\n    id: 2,\n    name: \"PDF\"\n  }];\n\n  var handleExportSelect = function handleExportSelect(e) {\n    e.persist();\n    setSaveType(function () {\n      return {\n        typeFile: e.target.value\n      };\n    });\n  };\n\n  var handleSearchKeyword = function handleSearchKeyword(e) {\n    e.persist();\n    setInputs(function (inputs) {\n      return _objectSpread({}, inputs, _defineProperty({}, e.target.name, e.target.value));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"bg-white rounded shadow-sm p-3 mb-3 overflow-visible\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, title ? React.createElement(\"h5\", {\n    className: \"font-16 text-primary mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, title) : \"\", React.createElement(AvForm, {\n    onValidSubmit: props.handleSubmit,\n    method: \"post\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FormSelectValidation, {\n    withLabel: true,\n    labelName: \"Zona - Validasi\",\n    labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n    formClassName: \"py-2 px-2 bg-white mb-0\",\n    formId: \"yourFormZone\",\n    formName: \"formZone\",\n    formPlaceholder: \"Pilih Zona\",\n    formOptionData: listZone,\n    formErrorMessage: \"Silahkan pilih zona\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FormSelectValidation, {\n    withLabel: true,\n    labelName: \"Tipe Pertanyaan - Validasi\",\n    labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n    formClassName: \"py-2 px-2 bg-white mb-0\",\n    formId: \"yourFormQuestionType\",\n    formName: \"formQuestionType\",\n    formPlaceholder: \"Pilih Tipe Pertanyaan\",\n    formOptionData: listQuestionType,\n    formErrorMessage: \"Silahkan pilih tipe pertanyaan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FormInputValidation, {\n    withLabel: true,\n    labelName: \"Pertanyaan - Validasi\",\n    labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n    formClassName: \"py-4 px-2 bg-white mb-0\",\n    formId: \"yourFormQuestion\",\n    formType: \"textarea\",\n    formName: \"formEmail\",\n    formPlaceholder: \"Masukan alamat email\",\n    formErrorMessage: \"Alamat email salah\",\n    onChange: _this.handleChange,\n    formValue: _this.state.formEmail,\n    formValidate: {\n      required: {\n        value: true,\n        errorMessage: 'Alamat email tidak boleh kosong'\n      },\n      email: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"lg\",\n    color: \"primary\",\n    type: \"submit\",\n    className: \"float-right mt-3 mb-2 px-5 text-uppercase font-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Kirim\"))));\n});","map":{"version":3,"sources":["/home/tog-randy/Source/BCA/Project/components/fragments/question/questionForm.js"],"names":["useState","AvForm","Table","Row","Col","Button","DatePicker","FormSelect","FormInput","FormInputValidation","FormSelectValidation","Workbook","addDays","timestampToDateTime","props","title","tHead","children","pagination","noResult","deepSearch","onFilterClick","onKeySearch","exportToFile","exportData","exportFileName","sortItems","sortValue","onSortClick","maxRangeDateFilter","listZone","listQuestionType","console","log","Date","startDate","setStartDate","endDate","setEndDate","keywords","inputs","setInputs","typeFile","undefined","saveType","setSaveType","saveTypeOption","id","name","handleExportSelect","e","persist","target","value","handleSearchKeyword","handleSubmit","handleChange","state","formEmail","required","errorMessage","email"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { AvForm } from 'availity-reactstrap-validation'\nimport { Table, Row, Col, Button } from 'reactstrap'\nimport DatePicker from 'react-datepicker'\nimport FormSelect from '../../form/selectForm'\nimport FormInput from '../../form/inputForm'\nimport FormInputValidation from '../../form/validateInputForm'\nimport FormSelectValidation from '../../form/validateSelectForm'\nimport Workbook from 'react-excel-workbook'\nimport { addDays, timestampToDateTime } from '../../functions'\n\nexport default (props) => {\n\n    const { \n        title, tHead, children, pagination, noResult, \n        deepSearch, onFilterClick, onKeySearch, \n        exportToFile, exportData, exportFileName,\n        sortItems, sortValue, onSortClick, maxRangeDateFilter,\n        listZone, listQuestionType\n        \n    } = props\n\n    console.log('%c üçø listZone: ', 'font-size:20px;background-color: #FCA650;color:#fff;', listZone);\n    console.log('%c üçÖ sortItems: ', 'font-size:20px;background-color: #EA7E5C;color:#fff;', sortItems);\n\n    \n    const [startDate, setStartDate] = useState(new Date())\n    const [endDate, setEndDate] = useState(new Date(startDate))\n    const [inputs, setInputs] = useState({keywords: \"\"})\n    const [saveType, setSaveType] = useState({typeFile: undefined})\n    const saveTypeOption = [{ id: 1, name: \"EXCEL\" }, { id: 2, name: \"PDF\"}]\n\n    const handleExportSelect = (e) => {\n        e.persist()\n        setSaveType(() => ({typeFile: e.target.value}))\n    }\n\n    const handleSearchKeyword = (e) => {\n        e.persist()\n        setInputs(inputs => ({...inputs, [e.target.name]: e.target.value}))\n    }\n    return (\n        <div className=\"bg-white rounded shadow-sm p-3 mb-3 overflow-visible\">\n            {title ? <h5 className=\"font-16 text-primary mb-3\">{title}</h5> : \"\"}\n                <AvForm onValidSubmit={props.handleSubmit} method=\"post\" autoComplete=\"off\" >\t\t\n                    <Row>\t\t\n                        <Col xs=\"12\" sm=\"6\" md=\"6\">\n                             <FormSelectValidation \n                                withLabel={true}\n                                labelName=\"Zona - Validasi\"\n                                labelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n                                formClassName=\"py-2 px-2 bg-white mb-0\"\n                                formId=\"yourFormZone\" \n                                formName=\"formZone\" \n                                formPlaceholder=\"Pilih Zona\"\n                                formOptionData={listZone}\n                                formErrorMessage=\"Silahkan pilih zona\" \n                            />\n                        </Col>\n                        <Col xs=\"12\" sm=\"6\">\n                            <FormSelectValidation \n                                withLabel={true}\n                                labelName=\"Tipe Pertanyaan - Validasi\"\n                                labelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n                                formClassName=\"py-2 px-2 bg-white mb-0\"\n                                formId=\"yourFormQuestionType\" \n                                formName=\"formQuestionType\" \n                                formPlaceholder=\"Pilih Tipe Pertanyaan\"\n                                formOptionData={listQuestionType}\n                                formErrorMessage=\"Silahkan pilih tipe pertanyaan\" \n                            />\n                        </Col>\n                        <Col xs=\"12\" sm=\"6\">\n                            <FormInputValidation \n                                withLabel={true}\n                                labelName=\"Pertanyaan - Validasi\"\n                                labelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n                                formClassName=\"py-4 px-2 bg-white mb-0\"\n                                formId=\"yourFormQuestion\" \n                                formType=\"textarea\" \n                                formName=\"formEmail\" \n                                formPlaceholder=\"Masukan alamat email\" \n                                formErrorMessage=\"Alamat email salah\" \n                                onChange={this.handleChange} \n                                formValue={this.state.formEmail}\n                                formValidate={{\n                                    required: { value: true, errorMessage: 'Alamat email tidak boleh kosong' },\n                                    email: true\n                                }} \n                            />\n                        </Col>\n                        <Button size=\"lg\" color=\"primary\" type=\"submit\" className=\"float-right mt-3 mb-2 px-5 text-uppercase font-12\">Kirim</Button>\n                    </Row>\n                </AvForm>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}