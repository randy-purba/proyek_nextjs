{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport LineChartBox from '../components/charts/line';\nimport HorizontalBarChartBox from '../components/charts/horizontalBar';\nimport PieDoubleChartBox from '../components/charts/pieDouble';\nimport PieSimpleChartBox from '../components/charts/pie';\nimport RadarChartBox from '../components/charts/radar';\nimport SimpleAreaChartBox from '../components/charts/simpleArea';\nimport StackedAreaChartBox from '../components/charts/stackedArea';\nimport BrushBarChartBox from '../components/charts/brushBar';\nimport SpeedometerChart from '../components/charts/speedometer';\nimport { Container, Row, Col } from 'reactstrap';\nimport { getLineChart, getGlobalChart } from '../components/actions';\n\nvar Statistic =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Statistic, _React$Component);\n\n  _createClass(Statistic, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, props, stores;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store;\n                props = {\n                  showHeader: true,\n                  showFooter: true\n                };\n                stores = store.getState();\n                _context.prev = 3;\n\n                if (stores.lineChart) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 7;\n                return store.dispatch(getLineChart());\n\n              case 7:\n                if (stores.globalChart) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 10;\n                return store.dispatch(getGlobalChart());\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                props.error = 'Unable to fetch AsyncData on server';\n\n              case 15:\n                return _context.abrupt(\"return\", props);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 12]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Statistic(props) {\n    var _this;\n\n    _classCallCheck(this, Statistic);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Statistic).call(this, props));\n    _this.state = {\n      title: props.companyName,\n      subTitle: \"Content Management System\",\n      showHeader: props.showHeader,\n      headerHeight: props.headerHeight,\n      navIsOpen: props.navIsOpen,\n      navMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n      navMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n      lineChart: props.lineChart,\n      globalChart: props.globalChart\n    };\n    return _this;\n  }\n\n  _createClass(Statistic, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.setState({\n        lineChart: nextProps.lineChart,\n        globalChart: nextProps.globalChart,\n        navIsOpen: nextProps.navIsOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          showHeader = _this$state.showHeader,\n          headerHeight = _this$state.headerHeight,\n          navIsOpen = _this$state.navIsOpen,\n          navMinWidth = _this$state.navMinWidth,\n          navMaxWidth = _this$state.navMaxWidth,\n          lineChart = _this$state.lineChart,\n          globalChart = _this$state.globalChart; // console.dir(globalChart);\n      // Sample Data\n\n      var globalChartData = [{\n        name: 'Page A',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400\n      }, {\n        name: 'Page B',\n        uv: 3000,\n        pv: 1398,\n        amt: 2210\n      }, {\n        name: 'Page C',\n        uv: 2000,\n        pv: 9800,\n        amt: 2290\n      }, {\n        name: 'Page D',\n        uv: 2780,\n        pv: 3908,\n        amt: 2000\n      }, {\n        name: 'Page E',\n        uv: 1890,\n        pv: 4800,\n        amt: 2181\n      }, {\n        name: 'Page F',\n        uv: 2390,\n        pv: 3800,\n        amt: 2500\n      }, {\n        name: 'Page G',\n        uv: 3490,\n        pv: 4300,\n        amt: 2100\n      }];\n      var pieDoubleChartData = {\n        data01: [{\n          name: 'Group A',\n          value: 400\n        }, {\n          name: 'Group B',\n          value: 300\n        }, {\n          name: 'Group C',\n          value: 300\n        }, {\n          name: 'Group D',\n          value: 200\n        }],\n        data02: [{\n          name: 'A1',\n          value: 100\n        }, {\n          name: 'A2',\n          value: 300\n        }, {\n          name: 'B1',\n          value: 100\n        }, {\n          name: 'B2',\n          value: 80\n        }, {\n          name: 'B3',\n          value: 40\n        }, {\n          name: 'B4',\n          value: 30\n        }, {\n          name: 'B5',\n          value: 50\n        }, {\n          name: 'C1',\n          value: 100\n        }, {\n          name: 'C2',\n          value: 200\n        }, {\n          name: 'D1',\n          value: 150\n        }, {\n          name: 'D2',\n          value: 50\n        }]\n      };\n      var radarChartData = [{\n        subject: 'Math',\n        A: 120,\n        B: 110,\n        fullMark: 150\n      }, {\n        subject: 'Chinese',\n        A: 98,\n        B: 130,\n        fullMark: 150\n      }, {\n        subject: 'English',\n        A: 86,\n        B: 130,\n        fullMark: 150\n      }, {\n        subject: 'Geography',\n        A: 99,\n        B: 100,\n        fullMark: 150\n      }, {\n        subject: 'Physics',\n        A: 85,\n        B: 90,\n        fullMark: 150\n      }, {\n        subject: 'History',\n        A: 65,\n        B: 85,\n        fullMark: 150\n      }];\n      var pieChartData = [{\n        name: 'Group A',\n        value: 400\n      }, {\n        name: 'Group B',\n        value: 300\n      }, {\n        name: 'Group C',\n        value: 300\n      }, {\n        name: 'Group D',\n        value: 200\n      }];\n      var brushBarChartData = [{\n        name: '1',\n        uv: 300,\n        pv: 456\n      }, {\n        name: '2',\n        uv: -145,\n        pv: 230\n      }, {\n        name: '3',\n        uv: -100,\n        pv: 345\n      }, {\n        name: '4',\n        uv: -8,\n        pv: 450\n      }, {\n        name: '5',\n        uv: 100,\n        pv: 321\n      }, {\n        name: '6',\n        uv: 9,\n        pv: 235\n      }, {\n        name: '7',\n        uv: 53,\n        pv: 267\n      }, {\n        name: '8',\n        uv: 252,\n        pv: -378\n      }, {\n        name: '9',\n        uv: 79,\n        pv: -210\n      }, {\n        name: '10',\n        uv: 294,\n        pv: -23\n      }, {\n        name: '12',\n        uv: 43,\n        pv: 45\n      }, {\n        name: '13',\n        uv: -74,\n        pv: 90\n      }, {\n        name: '14',\n        uv: -71,\n        pv: 130\n      }, {\n        name: '15',\n        uv: -117,\n        pv: 11\n      }, {\n        name: '16',\n        uv: -186,\n        pv: 107\n      }, {\n        name: '17',\n        uv: -16,\n        pv: 926\n      }, {\n        name: '18',\n        uv: -125,\n        pv: 653\n      }, {\n        name: '19',\n        uv: 222,\n        pv: 366\n      }, {\n        name: '20',\n        uv: 372,\n        pv: 486\n      }, {\n        name: '21',\n        uv: 182,\n        pv: 512\n      }, {\n        name: '22',\n        uv: 164,\n        pv: 302\n      }, {\n        name: '23',\n        uv: 316,\n        pv: 425\n      }, {\n        name: '24',\n        uv: 131,\n        pv: 467\n      }, {\n        name: '25',\n        uv: 291,\n        pv: -190\n      }, {\n        name: '26',\n        uv: -47,\n        pv: 194\n      }, {\n        name: '27',\n        uv: -415,\n        pv: 371\n      }, {\n        name: '28',\n        uv: -182,\n        pv: 376\n      }, {\n        name: '29',\n        uv: -93,\n        pv: 295\n      }, {\n        name: '30',\n        uv: -99,\n        pv: 322\n      }, {\n        name: '31',\n        uv: -52,\n        pv: 246\n      }, {\n        name: '32',\n        uv: 154,\n        pv: 33\n      }, {\n        name: '33',\n        uv: 205,\n        pv: 354\n      }, {\n        name: '34',\n        uv: 70,\n        pv: 258\n      }, {\n        name: '35',\n        uv: -25,\n        pv: 359\n      }, {\n        name: '36',\n        uv: -59,\n        pv: 192\n      }, {\n        name: '37',\n        uv: -63,\n        pv: 464\n      }, {\n        name: '38',\n        uv: -91,\n        pv: -2\n      }, {\n        name: '39',\n        uv: -66,\n        pv: 154\n      }, {\n        name: '40',\n        uv: -50,\n        pv: 186\n      }];\n      var speedometerChartData = {\n        maxValue: 100,\n        value: 87\n      };\n      return React.createElement(\"div\", {\n        role: \"main\",\n        className: \"animate-all fast bg-light\",\n        style: {\n          paddingTop: showHeader ? headerHeight : 0,\n          paddingLeft: navMinWidth,\n          overflowX: \"hidden\"\n        }\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"contentContainer px-4 pt-4 pb-2\",\n        style: {\n          marginLeft: navIsOpen ? navMaxWidth - navMinWidth : 0,\n          width: navIsOpen ? \"calc(100% - \".concat(navMaxWidth - navMinWidth, \"px)\") : '100%'\n        }\n      }, React.createElement(Row, null, React.createElement(Col, {\n        xs: \"12\",\n        md: \"6\"\n      }, React.createElement(LineChartBox, {\n        title: \"Line Chart\",\n        width: \"100%\",\n        height: 300,\n        data: lineChart\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\"\n      }, React.createElement(HorizontalBarChartBox, {\n        title: \"Horizontal Bar Chart\",\n        width: \"100%\",\n        height: 300,\n        data: globalChart\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"12\"\n      }, React.createElement(BrushBarChartBox, {\n        title: \"Brush Bar Chart\",\n        width: \"100%\",\n        height: 300,\n        data: brushBarChartData\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\"\n      }, React.createElement(SimpleAreaChartBox, {\n        title: \"Simple Area Chart\",\n        width: \"100%\",\n        height: 300,\n        data: globalChart\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\"\n      }, React.createElement(StackedAreaChartBox, {\n        title: \"Stacked Area Chart\",\n        width: \"100%\",\n        height: 300,\n        data: globalChart\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\"\n      }, React.createElement(PieDoubleChartBox, {\n        title: \"Pie Double Chart\",\n        width: \"100%\",\n        height: 300,\n        data: pieDoubleChartData,\n        label: true\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\"\n      }, React.createElement(PieSimpleChartBox, {\n        title: \"Pie Simple Chart\",\n        width: \"100%\",\n        height: 300,\n        data: pieChartData,\n        label: true\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\"\n      }, React.createElement(RadarChartBox, {\n        title: \"Radar Chart\",\n        width: \"100%\",\n        height: 300,\n        data: radarChartData\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\"\n      }, React.createElement(SpeedometerChart, {\n        title: \"Speedometer Chart\",\n        width: \"100%\",\n        height: 300,\n        data: speedometerChartData\n      })), React.createElement(Col, {\n        sm: \"12\",\n        md: \"6\"\n      }, React.createElement(\"div\", {\n        className: \"bg-white rounded shadow-sm p-3 mb-4 overflow-auto\"\n      }, React.createElement(\"h5\", {\n        className: \"display-5 text-primary mb-3\"\n      }, \"Chart 10\"), React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          height: 300\n        }\n      }))))));\n    }\n  }]);\n\n  return Statistic;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getLineChart: bindActionCreators(getLineChart, dispatch),\n    getGlobalChart: bindActionCreators(getGlobalChart, dispatch)\n  };\n};\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(Statistic);","map":null,"metadata":{},"sourceType":"module"}