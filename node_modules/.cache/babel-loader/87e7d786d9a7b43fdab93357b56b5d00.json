{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport { actionTypes } from '../types'; // const API_URL = process.env.API_URL\n\nvar API_DUMMY_URL = process.env.API_DUMMY_URL;\nexport var getPieDoubleChart = function getPieDoubleChart() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var url, responses, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(API_DUMMY_URL, \"/globalChart\");\n                _context.next = 3;\n                return fetch(url);\n\n              case 3:\n                responses = _context.sent;\n                _context.next = 6;\n                return responses.json();\n\n              case 6:\n                data = _context.sent;\n                return _context.abrupt(\"return\", dispatch({\n                  type: actionTypes.PIE_DOUBLE_CHART,\n                  payload: data\n                }));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/tog-randy/Source/next.js/Chapter 2/next-pwa-withredux-master/components/actions/PieDoubleChart.js"],"names":["fetch","actionTypes","API_DUMMY_URL","process","env","getPieDoubleChart","dispatch","url","responses","json","data","type","PIE_DOUBLE_CHART","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,UAA5B,C,CAEA;;AACA,IAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYF,aAAlC;AAEA,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BC,gBAAAA,GAD6B,aACpBL,aADoB;AAAA;AAAA,uBAEXF,KAAK,CAACO,GAAD,CAFM;;AAAA;AAE7BC,gBAAAA,SAF6B;AAAA;AAAA,uBAGhBA,SAAS,CAACC,IAAV,EAHgB;;AAAA;AAG7BC,gBAAAA,IAH6B;AAAA,iDAI5BJ,QAAQ,CAAC;AAAEK,kBAAAA,IAAI,EAAEV,WAAW,CAACW,gBAApB;AAAsCC,kBAAAA,OAAO,EAAEH;AAA/C,iBAAD,CAJoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { actionTypes } from '../types'\n\n// const API_URL = process.env.API_URL\nconst API_DUMMY_URL = process.env.API_DUMMY_URL\n\nexport const getPieDoubleChart = () => async (dispatch) => {\n    const url = `${API_DUMMY_URL}/globalChart`\n    const responses = await fetch(url)\n    const data = await responses.json()\n    return dispatch({ type: actionTypes.PIE_DOUBLE_CHART, payload: data })\n}"]},"metadata":{},"sourceType":"module"}