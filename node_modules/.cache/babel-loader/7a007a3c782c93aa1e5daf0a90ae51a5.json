{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/tog-randy/Source/next.js/Chapter 2/next-pwa-withredux-master/components/form/selectForm.js\";\nimport React from \"react\";\nimport { FormGroup, Label, Input } from 'reactstrap';\nexport default (function (props) {\n  return React.createElement(FormGroup, _extends({\n    className: \"mb-3 position-relative \".concat(props.containerClassName ? props.containerClassName : '')\n  }, props.containerStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }), props.withLabel ? React.createElement(Label, {\n    for: props.formId,\n    className: props.labelClassName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.labelName) : \"\", React.createElement(Input, {\n    type: \"select\",\n    className: props.formClassName,\n    name: props.formName,\n    id: props.formId,\n    value: props.formValue,\n    onChange: props.onChange,\n    related: props.formRelation,\n    bsSize: props.formSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.formPlaceholder ? React.createElement(\"option\", {\n    key: \"\",\n    value: \"\",\n    readOnly: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.formPlaceholder) : \"\", props.formOptionData.map(function (data, key) {\n    return React.createElement(\"option\", {\n      key: key,\n      value: data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, data.name);\n  })));\n});","map":{"version":3,"sources":["/home/tog-randy/Source/next.js/Chapter 2/next-pwa-withredux-master/components/form/selectForm.js"],"names":["FormGroup","Label","Input","props","containerClassName","containerStyle","withLabel","formId","labelClassName","labelName","formClassName","formName","formValue","onChange","formRelation","formSize","formPlaceholder","formOptionData","map","data","key","id","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AAEA,gBAAe,UAACC,KAAD,EAAW;AACtB,SACI,oBAAC,SAAD;AACI,IAAA,SAAS,mCAA4BA,KAAK,CAACC,kBAAN,GAA2BD,KAAK,CAACC,kBAAjC,GAAsD,EAAlF;AADb,KAEQD,KAAK,CAACE,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKQF,KAAK,CAACG,SAAN,GACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEH,KAAK,CAACI,MAAlB;AAA0B,IAAA,SAAS,EAAEJ,KAAK,CAACK,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DL,KAAK,CAACM,SAAlE,CADA,GACuF,EAN/F,EAQI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAEN,KAAK,CAACO,aAFrB;AAGI,IAAA,IAAI,EAAEP,KAAK,CAACQ,QAHhB;AAII,IAAA,EAAE,EAAER,KAAK,CAACI,MAJd;AAKI,IAAA,KAAK,EAAEJ,KAAK,CAACS,SALjB;AAMI,IAAA,QAAQ,EAAET,KAAK,CAACU,QANpB;AAOI,IAAA,OAAO,EAAEV,KAAK,CAACW,YAPnB;AAQI,IAAA,MAAM,EAAEX,KAAK,CAACY,QARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWQZ,KAAK,CAACa,eAAN,GACA;AAAQ,IAAA,GAAG,EAAC,EAAZ;AAAe,IAAA,KAAK,EAAC,EAArB;AAAwB,IAAA,QAAQ,MAAhC;AAAiC,IAAA,MAAM,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCb,KAAK,CAACa,eAA/C,CADA,GAC2E,EAZnF,EAeQb,KAAK,CAACc,cAAN,CAAqBC,GAArB,CAAyB,UAACC,IAAD,EAAOC,GAAP;AAAA,WAAe;AAAQ,MAAA,GAAG,EAAEA,GAAb;AAAkB,MAAA,KAAK,EAAED,IAAI,CAACE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCF,IAAI,CAACG,IAAxC,CAAf;AAAA,GAAzB,CAfR,CARJ,CADJ;AA6BH,CA9BD","sourcesContent":["import { FormGroup, Label, Input } from 'reactstrap'\n\nexport default (props) => {\n    return (\n        <FormGroup \n            className={`mb-3 position-relative ${props.containerClassName ? props.containerClassName : ''}`}\n            {...props.containerStyle}\n        >\n            {\n                props.withLabel ?\n                <Label for={props.formId} className={props.labelClassName}>{props.labelName}</Label> : \"\"\n            }\n            <Input \n                type=\"select\"\n                className={props.formClassName} \n                name={props.formName}   \n                id={props.formId} \n                value={props.formValue}\n                onChange={props.onChange}\n                related={props.formRelation}\n                bsSize={props.formSize}\n            >\n                {\n                    props.formPlaceholder ?\n                    <option key=\"\" value=\"\" readOnly hidden>{props.formPlaceholder}</option> : \"\"\n                }\n                {\n                    props.formOptionData.map((data, key) => <option key={key} value={data.id}>{data.name}</option>)\n                }\n            </Input>\n        </FormGroup>\n    )\n}"]},"metadata":{},"sourceType":"module"}