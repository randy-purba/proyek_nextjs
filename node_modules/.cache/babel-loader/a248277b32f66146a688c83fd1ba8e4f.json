{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport { actionTypes } from '../types';\nimport cookie from 'js-cookie';\nvar token = cookie.get('token');\nvar API_URL = process.env.API_URL;\nvar API_DUMMY_URL = process.env.API_DUMMY_URL;\nexport var getListBankQuestion = function getListBankQuestion(page, len, dateFrom, dateTo, sortBy, nameVal) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", dispatch({\n                  type: actionTypes.LIST_BANK_QUESTION,\n                  payload: data\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar getTotalListBankQuestion = function getTotalListBankQuestion(data) {\n  return function (dispatch) {\n    return dispatch({\n      type: actionTypes.TOTAL_BANK_QUESTION,\n      payload: data\n    });\n  };\n};\n\nexport var getListBankQuestionRealApi = function getListBankQuestionRealApi() {\n  return function (dispatch) {\n    console.log(\"getListBankQuestionRealApi : \" + token); //     const url = `${API_URL}/api/v1/bca/video`\n    //     const res = await fetch(url, {\n    //         headers: { Authorization: 'Bearer ' + token }\n    //     })\n    //     const data = await res.json()\n  };\n};","map":{"version":3,"sources":["/home/tog-randy/Source/BCA/Project/components/actions/ListBankQuestionApi.js"],"names":["fetch","actionTypes","cookie","token","get","API_URL","process","env","API_DUMMY_URL","getListBankQuestion","page","len","dateFrom","dateTo","sortBy","nameVal","dispatch","type","LIST_BANK_QUESTION","payload","data","getTotalListBankQuestion","TOTAL_BANK_QUESTION","getListBankQuestionRealApi","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,IAAMC,KAAK,GAAGD,MAAM,CAACE,GAAP,CAAW,OAAX,CAAd;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAA5B;AACA,IAAMG,aAAa,GAAGF,OAAO,CAACC,GAAR,CAAYC,aAAlC;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAOC,GAAP,EAAYC,QAAZ,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAkD,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,iDAW1EA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEhB,WAAW,CAACiB,kBAApB;AAAwCC,kBAAAA,OAAO,EAAEC;AAAjD,iBAAD,CAXkE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAcP,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACD,IAAD;AAAA,SAAU,UAACJ,QAAD,EAAc;AACrD,WAAOA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhB,WAAW,CAACqB,mBAApB;AAAyCH,MAAAA,OAAO,EAAEC;AAAlD,KAAD,CAAf;AACH,GAFgC;AAAA,CAAjC;;AAIA,OAAO,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA6B;AAAA,SAAM,UAACP,QAAD,EAAc;AAC1DQ,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCtB,KAA9C,EAD0D,CAE9D;AACA;AACA;AACA;AACA;AACC,GAPyC;AAAA,CAAnC","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { actionTypes } from '../types'\nimport cookie from 'js-cookie'\n\n\nconst token = cookie.get('token')\n\nconst API_URL = process.env.API_URL\nconst API_DUMMY_URL = process.env.API_DUMMY_URL\n\nexport const getListBankQuestion = (page, len, dateFrom, dateTo, sortBy, nameVal) => async (dispatch) => {\n    // const from = dateFrom ? `&date_gte=${dateFrom}` : ''\n    // const to = dateTo ? `&date_lte=${dateTo}` : ''\n    // const keywords = nameVal ? `name_like=${nameVal}&` : ''\n    // const params = `${keywords}_start=${page*len}&_limit=${len}${from}${to}&_sort=${sortBy}&_order=desc`\n    // const url = `${API_DUMMY_URL}/bankQuestionData?${params}`    \n    // const responses = await fetch(url)\n    // const headers = await responses.headers\n    // const total = await headers.get('x-total-count')\n    // dispatch(getTotalListBankQuestion(total))\n    // const data = await responses.json()\n    return dispatch({ type: actionTypes.LIST_BANK_QUESTION, payload: data })\n}\n\nconst getTotalListBankQuestion = (data) => (dispatch) => {\n    return dispatch({ type: actionTypes.TOTAL_BANK_QUESTION, payload: data })\n}\n\nexport const getListBankQuestionRealApi = () => (dispatch) => {\n    console.log(\"getListBankQuestionRealApi : \" + token )\n//     const url = `${API_URL}/api/v1/bca/video`\n//     const res = await fetch(url, {\n//         headers: { Authorization: 'Bearer ' + token }\n//     })\n//     const data = await res.json()\n}"]},"metadata":{},"sourceType":"module"}