{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/tog-randy/Source/BCA/Project/components/fragments/question/questionForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AvForm } from './availity-reactstrap-validation';\nimport ContentBox from '../components/contentBox';\nimport FormInput from '../components/form/inputForm';\nimport FormSelect from '../components/form/selectForm';\nimport FormInputValidation from '../components/form/validateInputForm';\nimport FormSelectValidation from '../components/form/validateSelectForm';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { regexHtmlTag } from '../components/functions';\n\nvar QuestionForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QuestionForm, _React$Component);\n\n  function QuestionForm(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var target = e.target,\n          value = target.value,\n          name = target.name,\n          related = target.getAttribute('related');\n\n      _this.setState(_defineProperty({}, name, regexHtmlTag(value)));\n\n      if (related) _this.setState(_defineProperty({}, related, regexHtmlTag(value)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectOption\", function (e) {\n      var target = e.target,\n          value = target.value,\n          name = target.name,\n          related = target.getAttribute('related');\n\n      _this.setState(_defineProperty({}, name, Number(value)));\n\n      if (related) _this.setState(_defineProperty({}, related, 0));\n    });\n\n    _this.state = {\n      title: props.companyName,\n      subTitle: \"Content Management System\",\n      showHeader: props.showHeader,\n      headerHeight: props.headerHeight,\n      navIsOpen: props.navIsOpen,\n      navMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n      navMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n      formNama: \"Budi Santoso\",\n      formEmail: \"budi@san.toso\",\n      formTelp: \"0210909090\",\n      formKota: 2,\n      formProvinsi: 0,\n      formNomor: 10,\n      listCity: props.listCity\n    };\n    return _this;\n  }\n\n  _createClass(QuestionForm, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.setState({\n        listCity: nextProps.listCity,\n        navIsOpen: nextProps.navIsOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          showHeader = _this$state.showHeader,\n          headerHeight = _this$state.headerHeight,\n          navIsOpen = _this$state.navIsOpen,\n          navMinWidth = _this$state.navMinWidth,\n          navMaxWidth = _this$state.navMaxWidth,\n          listCity = _this$state.listCity;\n      var listProvince = listCity.filter(function (data) {\n        return data.id === _this2.state.formKota;\n      })[0].provinsi;\n      return React.createElement(\"div\", {\n        role: \"main\",\n        className: \"animate-all fast bg-light\",\n        style: {\n          paddingTop: showHeader ? headerHeight : 0,\n          paddingLeft: navMinWidth,\n          overflowX: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        className: \"contentContainer px-4 pt-4 pb-2\",\n        style: {\n          marginLeft: navIsOpen ? navMaxWidth - navMinWidth : 0,\n          width: navIsOpen ? \"calc(100% - \".concat(navMaxWidth - navMinWidth, \"px)\") : '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(ContentBox, {\n        title: \"Registration Form\",\n        className: \"bg-white rounded shadow-sm p-3 mb-4 overflow-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(AvForm, {\n        onValidSubmit: this.handleSubmit,\n        method: \"post\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        withLabel: true,\n        labelName: \"Nama Lengkap - Tanpa Validasi\",\n        labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n        formClassName: \"py-4 px-2 bg-white mb-0\",\n        formId: \"yourFormNama\",\n        formType: \"text\",\n        formName: \"formNama\",\n        formPlaceholder: \"Masukan Nama\",\n        formValue: this.state.formNama,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(FormInputValidation, {\n        withLabel: true,\n        labelName: \"Alamat Email - Validasi\",\n        labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n        formClassName: \"py-4 px-2 bg-white mb-0\",\n        formId: \"yourFormEmail\",\n        formType: \"email\",\n        formName: \"formEmail\",\n        formPlaceholder: \"Masukan alamat email\",\n        formErrorMessage: \"Alamat email salah\",\n        onChange: this.handleChange,\n        formValue: this.state.formEmail,\n        formValidate: {\n          required: {\n            value: true,\n            errorMessage: 'Alamat email tidak boleh kosong'\n          },\n          email: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        withLabel: true,\n        labelName: \"Nomor Telpon - Tanpa Validasi\",\n        labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n        formClassName: \"py-4 px-2 bg-white mb-0\",\n        formId: \"yourFormTelp\",\n        formType: \"text\",\n        formName: \"formTelp\",\n        formPlaceholder: \"Masukan Nomor Telpon\",\n        formValue: this.state.formTelp,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(FormSelect, {\n        withLabel: true,\n        labelName: \"Kota - Tanpa Validasi\",\n        labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n        formClassName: \"py-2 px-2 bg-white mb-0\",\n        formId: \"yourFormKota\",\n        formName: \"formKota\",\n        formPlaceholder: \"Pilih Kota\",\n        formRelation: \"formProvinsi\",\n        formOptionData: listCity,\n        formValue: this.state.formKota,\n        onChange: this.handleSelectOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(FormSelectValidation, {\n        withLabel: true,\n        labelName: \"Provinsi - Validasi\",\n        labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n        formClassName: \"py-2 px-2 bg-white mb-0\",\n        formId: \"yourFormKota\",\n        formName: \"formProvinsi\",\n        formPlaceholder: \"Pilih Provinsi\",\n        formValue: this.state.formProvinsi,\n        formOptionData: listProvince,\n        onChange: this.handleSelectOption,\n        formErrorMessage: \"Silahkan pilih provinsi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        withLabel: true,\n        labelName: \"Nomor Rumah - Tanpa Validasi\",\n        labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n        formClassName: \"py-4 px-2 bg-white mb-0\",\n        formId: \"yourFormNomor\",\n        formType: \"number\",\n        formName: \"formNomor\",\n        formPlaceholder: \"Masukan Nomor Rumah\",\n        formValue: this.state.formNomor,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Button, {\n        size: \"lg\",\n        color: \"primary\",\n        type: \"submit\",\n        className: \"float-right mt-3 mb-2 px-5 text-uppercase font-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Kirim\")))))));\n    }\n  }]);\n\n  return QuestionForm;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getListCities: bindActionCreators(getListCities, dispatch)\n  };\n};\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(QuestionForm);","map":{"version":3,"sources":["/home/tog-randy/Source/BCA/Project/components/fragments/question/questionForm.js"],"names":["React","connect","bindActionCreators","AvForm","ContentBox","FormInput","FormSelect","FormInputValidation","FormSelectValidation","Container","Row","Col","Button","regexHtmlTag","QuestionForm","props","e","target","value","name","related","getAttribute","setState","Number","state","title","companyName","subTitle","showHeader","headerHeight","navIsOpen","navMaxWidth","navMinWidth","formNama","formEmail","formTelp","formKota","formProvinsi","formNomor","listCity","nextProps","listProvince","filter","data","id","provinsi","paddingTop","paddingLeft","overflowX","marginLeft","width","handleSubmit","handleChange","required","errorMessage","email","handleSelectOption","Component","mapDispatchToProps","dispatch","getListCities"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { AvForm } from './availity-reactstrap-validation'\nimport ContentBox from '../components/contentBox'\nimport FormInput from '../components/form/inputForm'\nimport FormSelect from '../components/form/selectForm'\nimport FormInputValidation from '../components/form/validateInputForm'\nimport FormSelectValidation from '../components/form/validateSelectForm'\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport { regexHtmlTag } from '../components/functions'\n\nclass QuestionForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttitle: props.companyName,\n\t\t\tsubTitle: \"Content Management System\",\n\t\t\tshowHeader: props.showHeader,\n\t\t\theaderHeight: props.headerHeight,\n\t\t\tnavIsOpen: props.navIsOpen,\n\t\t\tnavMaxWidth: props.showHeader ? props.navMaxWidth : \"0px\",\n\t\t\tnavMinWidth: props.showHeader ? props.navMinWidth : \"0px\",\n\t\t\tformNama: \"Budi Santoso\",\n\t\t\tformEmail: \"budi@san.toso\",\n\t\t\tformTelp: \"0210909090\",\n\t\t\tformKota: 2,\n\t\t\tformProvinsi: 0,\n\t\t\tformNomor: 10,\n\t\t\tlistCity: props.listCity\n\t\t}\n\t}\n\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tthis.setState({\n\t\t\tlistCity: nextProps.listCity,\n\t\t\tnavIsOpen: nextProps.navIsOpen\n\t\t})\n\t}\n\n\thandleChange = (e) => {\n\t\tconst target = e.target, value = target.value, name = target.name, related = target.getAttribute('related')\n\t\tthis.setState({ [name]: regexHtmlTag(value) })\n\t\tif(related) this.setState({ [related]: regexHtmlTag(value) })\n\t}\n\n\thandleSelectOption = (e) => {\n\t\tconst target = e.target, value = target.value, name = target.name, related = target.getAttribute('related')\n\t\tthis.setState({ [name]: Number(value) })\n\t\tif(related) this.setState({ [related]: 0 })\n\t}\n \n\trender() {\n\t\tconst { showHeader, headerHeight, navIsOpen, navMinWidth, navMaxWidth, listCity } = this.state\n\t\tconst listProvince = listCity.filter(data => data.id === this.state.formKota)[0].provinsi\n\t\treturn (\n\t\t\t<div \n\t\t\t\trole=\"main\" \n\t\t\t\tclassName=\"animate-all fast bg-light\"\n\t\t\t\tstyle={{\n\t\t\t\t\tpaddingTop: showHeader ? headerHeight : 0,\n\t\t\t\t\tpaddingLeft: navMinWidth,\n\t\t\t\t\toverflowX: \"hidden\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Container \n\t\t\t\t\tfluid \n\t\t\t\t\tclassName=\"contentContainer px-4 pt-4 pb-2\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: navIsOpen ? navMaxWidth-navMinWidth : 0,\n\t\t\t\t\t\twidth: navIsOpen ? `calc(100% - ${navMaxWidth-navMinWidth}px)` : '100%'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"12\">\n\t\t\t\t\t\t\t<ContentBox \n\t\t\t\t\t\t\t\ttitle=\"Registration Form\"\n\t\t\t\t\t\t\t\tclassName=\"bg-white rounded shadow-sm p-3 mb-4 overflow-auto\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AvForm onValidSubmit={this.handleSubmit} method=\"post\" autoComplete=\"off\" >\n\t\t\t\t\t\t\t\t\t<FormInput \n\t\t\t\t\t\t\t\t\t\twithLabel={true}\n\t\t\t\t\t\t\t\t\t\tlabelName=\"Nama Lengkap - Tanpa Validasi\"\n\t\t\t\t\t\t\t\t\t\tlabelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n\t\t\t\t\t\t\t\t\t\tformClassName=\"py-4 px-2 bg-white mb-0\"\n\t\t\t\t\t\t\t\t\t\tformId=\"yourFormNama\" \n\t\t\t\t\t\t\t\t\t\tformType=\"text\" \n\t\t\t\t\t\t\t\t\t\tformName=\"formNama\"\n\t\t\t\t\t\t\t\t\t\tformPlaceholder=\"Masukan Nama\" \n\t\t\t\t\t\t\t\t\t\tformValue={this.state.formNama}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormInputValidation \n\t\t\t\t\t\t\t\t\t\twithLabel={true}\n\t\t\t\t\t\t\t\t\t\tlabelName=\"Alamat Email - Validasi\"\n\t\t\t\t\t\t\t\t\t\tlabelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n\t\t\t\t\t\t\t\t\t\tformClassName=\"py-4 px-2 bg-white mb-0\"\n\t\t\t\t\t\t\t\t\t\tformId=\"yourFormEmail\" \n\t\t\t\t\t\t\t\t\t\tformType=\"email\" \n\t\t\t\t\t\t\t\t\t\tformName=\"formEmail\" \n\t\t\t\t\t\t\t\t\t\tformPlaceholder=\"Masukan alamat email\" \n\t\t\t\t\t\t\t\t\t\tformErrorMessage=\"Alamat email salah\" \n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange} \n\t\t\t\t\t\t\t\t\t\tformValue={this.state.formEmail}\n\t\t\t\t\t\t\t\t\t\tformValidate={{\n\t\t\t\t\t\t\t\t\t\t\trequired: { value: true, errorMessage: 'Alamat email tidak boleh kosong' },\n\t\t\t\t\t\t\t\t\t\t\temail: true\n\t\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormInput \n\t\t\t\t\t\t\t\t\t\twithLabel={true}\n\t\t\t\t\t\t\t\t\t\tlabelName=\"Nomor Telpon - Tanpa Validasi\"\n\t\t\t\t\t\t\t\t\t\tlabelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n\t\t\t\t\t\t\t\t\t\tformClassName=\"py-4 px-2 bg-white mb-0\"\n\t\t\t\t\t\t\t\t\t\tformId=\"yourFormTelp\" \n\t\t\t\t\t\t\t\t\t\tformType=\"text\" \n\t\t\t\t\t\t\t\t\t\tformName=\"formTelp\" \n\t\t\t\t\t\t\t\t\t\tformPlaceholder=\"Masukan Nomor Telpon\" \n\t\t\t\t\t\t\t\t\t\tformValue={this.state.formTelp}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormSelect\n\t\t\t\t\t\t\t\t\t\twithLabel={true}\n\t\t\t\t\t\t\t\t\t\tlabelName=\"Kota - Tanpa Validasi\"\n\t\t\t\t\t\t\t\t\t\tlabelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n\t\t\t\t\t\t\t\t\t\tformClassName=\"py-2 px-2 bg-white mb-0\"\n\t\t\t\t\t\t\t\t\t\tformId=\"yourFormKota\" \n\t\t\t\t\t\t\t\t\t\tformName=\"formKota\" \n\t\t\t\t\t\t\t\t\t\tformPlaceholder=\"Pilih Kota\"\n\t\t\t\t\t\t\t\t\t\tformRelation=\"formProvinsi\"\n\t\t\t\t\t\t\t\t\t\tformOptionData={listCity}\n\t\t\t\t\t\t\t\t\t\tformValue={this.state.formKota}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleSelectOption} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormSelectValidation \n\t\t\t\t\t\t\t\t\t\twithLabel={true}\n\t\t\t\t\t\t\t\t\t\tlabelName=\"Provinsi - Validasi\"\n\t\t\t\t\t\t\t\t\t\tlabelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n\t\t\t\t\t\t\t\t\t\tformClassName=\"py-2 px-2 bg-white mb-0\"\n\t\t\t\t\t\t\t\t\t\tformId=\"yourFormKota\" \n\t\t\t\t\t\t\t\t\t\tformName=\"formProvinsi\" \n\t\t\t\t\t\t\t\t\t\tformPlaceholder=\"Pilih Provinsi\"\n\t\t\t\t\t\t\t\t\t\tformValue={this.state.formProvinsi}\n\t\t\t\t\t\t\t\t\t\tformOptionData={listProvince}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleSelectOption}\n\t\t\t\t\t\t\t\t\t\tformErrorMessage=\"Silahkan pilih provinsi\" \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormInput \n\t\t\t\t\t\t\t\t\t\twithLabel={true}\n\t\t\t\t\t\t\t\t\t\tlabelName=\"Nomor Rumah - Tanpa Validasi\"\n\t\t\t\t\t\t\t\t\t\tlabelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n\t\t\t\t\t\t\t\t\t\tformClassName=\"py-4 px-2 bg-white mb-0\"\n\t\t\t\t\t\t\t\t\t\tformId=\"yourFormNomor\" \n\t\t\t\t\t\t\t\t\t\tformType=\"number\" \n\t\t\t\t\t\t\t\t\t\tformName=\"formNomor\"\n\t\t\t\t\t\t\t\t\t\tformPlaceholder=\"Masukan Nomor Rumah\" \n\t\t\t\t\t\t\t\t\t\tformValue={this.state.formNomor}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button size=\"lg\" color=\"primary\" type=\"submit\" className=\"float-right mt-3 mb-2 px-5 text-uppercase font-12\">Kirim</Button>\n\t\t\t\t\t\t\t\t</AvForm>\n\t\t\t\t\t\t\t</ContentBox>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetListCities: bindActionCreators(getListCities, dispatch)\n\t}\n}\nexport default connect(state => state, mapDispatchToProps)(QuestionForm)"]},"metadata":{},"sourceType":"module"}