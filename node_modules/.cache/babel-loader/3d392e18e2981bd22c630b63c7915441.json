{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport { actionTypes } from '../types';\nimport cookie from 'js-cookie';\nvar token = cookie.get('token');\nvar API_URL = process.env.API_URL;\nvar API_DUMMY_URL = process.env.API_DUMMY_URL;\nexport var getListBankQuestion = function getListBankQuestion(page, len, dateFrom, dateTo, sortBy, nameVal) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var from, to, keywords, params, url, responses, headers, total, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"getListBankQuestion\");\n                from = dateFrom ? \"&date_gte=\".concat(dateFrom) : '';\n                to = dateTo ? \"&date_lte=\".concat(dateTo) : '';\n                keywords = nameVal ? \"name_like=\".concat(nameVal, \"&\") : '';\n                params = \"\".concat(keywords, \"_start=\").concat(page * len, \"&_limit=\").concat(len).concat(from).concat(to, \"&_sort=\").concat(sortBy, \"&_order=desc\");\n                url = \"\".concat(API_DUMMY_URL, \"/bankQuestionData?\").concat(params);\n                _context.next = 8;\n                return fetch(url);\n\n              case 8:\n                responses = _context.sent;\n                _context.next = 11;\n                return responses.headers;\n\n              case 11:\n                headers = _context.sent;\n                _context.next = 14;\n                return headers.get('x-total-count');\n\n              case 14:\n                total = _context.sent;\n                dispatch(getTotalListBankQuestion(total));\n                _context.next = 18;\n                return responses.json();\n\n              case 18:\n                data = _context.sent;\n                return _context.abrupt(\"return\", dispatch({\n                  type: actionTypes.LIST_BANK_QUESTION,\n                  payload: data\n                }));\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar getTotalListBankQuestion = function getTotalListBankQuestion(data) {\n  return function (dispatch) {\n    return dispatch({\n      type: actionTypes.TOTAL_BANK_QUESTION,\n      payload: data\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}