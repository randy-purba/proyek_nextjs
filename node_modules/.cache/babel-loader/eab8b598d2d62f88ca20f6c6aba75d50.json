{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tog-randy/Source/BCA/Project/components/fragments/question/questionForm.js\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport { AvForm } from 'availity-reactstrap-validation';\nimport { Table, Row, Col, Button } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport FormSelect from '../../form/selectForm';\nimport FormInput from '../../form/inputForm';\nimport FormInputValidation from '../../form/validateInputForm';\nimport FormSelectValidation from '../../form/validateSelectForm';\nimport Workbook from 'react-excel-workbook';\nimport { addDays, timestampToDateTime } from '../../functions';\nexport default (function (props) {\n  var _React$createElement;\n\n  var title = props.title,\n      listZone = props.listZone,\n      listQuestionType = props.listQuestionType;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(new Date(startDate)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endDate = _useState4[0],\n      setEndDate = _useState4[1];\n\n  var _useState5 = useState({\n    keywords: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputs = _useState6[0],\n      setInputs = _useState6[1];\n\n  var minLengthQuestion = 25;\n  var maxLengthQuestion = 255;\n  var errorMessageLengthQuestion = \"Pertanyaan harus antara \" + minLengthQuestion + \" dan \" + maxLengthQuestion + \" karakter\";\n\n  var handleExportSelect = function handleExportSelect(e) {\n    e.persist();\n    setSaveType(function () {\n      return {\n        typeFile: e.target.value\n      };\n    });\n  };\n\n  var handleSearchKeyword = function handleSearchKeyword(e) {\n    e.persist();\n    setInputs(function (inputs) {\n      return _objectSpread({}, inputs, _defineProperty({}, e.target.name, e.target.value));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"bg-white rounded shadow-sm p-3 mb-3 overflow-visible\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, title ? React.createElement(\"h5\", {\n    className: \"font-16 text-primary mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, title) : \"\", React.createElement(AvForm, {\n    onValidSubmit: props.handleSubmit,\n    method: \"post\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormSelectValidation, {\n    withLabel: true,\n    labelName: \"Zona - Validasi\",\n    labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n    formClassName: \"py-2 px-2 bg-white mb-0\",\n    formId: \"yourFormZone\",\n    formName: \"formZone\",\n    formPlaceholder: \"Pilih Zona\",\n    formOptionData: listZone,\n    formErrorMessage: \"Silahkan pilih zona\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FormSelectValidation, {\n    withLabel: true,\n    labelName: \"Tipe Pertanyaan - Validasi\",\n    labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n    formClassName: \"py-2 px-2 bg-white mb-0\",\n    formId: \"yourFormQuestionType\",\n    formName: \"formQuestionType\",\n    formPlaceholder: \"Pilih Tipe Pertanyaan\",\n    formOptionData: listQuestionType,\n    formErrorMessage: \"Silahkan pilih tipe pertanyaan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"12\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(FormInputValidation, (_React$createElement = {\n    withLabel: true,\n    labelName: \"Pertanyaan - Validasi\",\n    labelClassName: \"inputLabel position-absolute font-12 text-primary bg-white\",\n    formClassName: \"py-4 px-2 bg-white mb-0\",\n    formId: \"yourFormQuestion\",\n    formType: \"textarea\",\n    formName: \"formQuestion\",\n    formPlaceholder: \"Masukan pertanyaan\",\n    formValue: props.title,\n    onChange: props.handleChange\n  }, _defineProperty(_React$createElement, \"formValue\", props.formQuestion), _defineProperty(_React$createElement, \"formValidate\", {\n    required: {\n      value: true,\n      errorMessage: 'Pertanyaan tidak boleh kosong'\n    },\n    minLength: {\n      value: 6,\n      errorMessage: {\n        errorMessageLengthQuestion: errorMessageLengthQuestion\n      }\n    },\n    maxLength: {\n      value: {\n        maxLengthQuestion: maxLengthQuestion\n      },\n      errorMessage: {\n        errorMessageLengthQuestion: errorMessageLengthQuestion\n      }\n    }\n  }), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"12\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"font-16 text-primary mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, title)), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"12\",\n    md: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"lg\",\n    color: \"primary\",\n    type: \"submit\",\n    className: \"float-right mt-3 mb-2 px-5 text-uppercase font-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Kirim\")))));\n});","map":{"version":3,"sources":["/home/tog-randy/Source/BCA/Project/components/fragments/question/questionForm.js"],"names":["useState","AvForm","Table","Row","Col","Button","DatePicker","FormSelect","FormInput","FormInputValidation","FormSelectValidation","Workbook","addDays","timestampToDateTime","props","title","listZone","listQuestionType","Date","startDate","setStartDate","endDate","setEndDate","keywords","inputs","setInputs","minLengthQuestion","maxLengthQuestion","errorMessageLengthQuestion","handleExportSelect","e","persist","setSaveType","typeFile","target","value","handleSearchKeyword","name","handleSubmit","handleChange","formQuestion","required","errorMessage","minLength","maxLength"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { AvForm } from 'availity-reactstrap-validation'\nimport { Table, Row, Col, Button } from 'reactstrap'\nimport DatePicker from 'react-datepicker'\nimport FormSelect from '../../form/selectForm'\nimport FormInput from '../../form/inputForm'\nimport FormInputValidation from '../../form/validateInputForm'\nimport FormSelectValidation from '../../form/validateSelectForm'\nimport Workbook from 'react-excel-workbook'\nimport { addDays, timestampToDateTime } from '../../functions'\n\nexport default (props) => {\n\n    const { \n        title, listZone, listQuestionType\n    } = props\n\n    \n    const [startDate, setStartDate] = useState(new Date())\n    const [endDate, setEndDate] = useState(new Date(startDate))\n    const [inputs, setInputs] = useState({keywords: \"\"})\n    const minLengthQuestion = 25\n    const maxLengthQuestion = 255\n    const errorMessageLengthQuestion = \"Pertanyaan harus antara \" + minLengthQuestion + \" dan \" + maxLengthQuestion + \" karakter\"\n\n    const handleExportSelect = (e) => {\n        e.persist()\n        setSaveType(() => ({typeFile: e.target.value}))\n    }\n\n    const handleSearchKeyword = (e) => {\n        e.persist()\n        setInputs(inputs => ({...inputs, [e.target.name]: e.target.value}))\n    }\n    return (\n        <div className=\"bg-white rounded shadow-sm p-3 mb-3 overflow-visible\">\n            {title ? <h5 className=\"font-16 text-primary mb-3\">{title}</h5> : \"\"}\n                <AvForm onValidSubmit={props.handleSubmit} method=\"post\" autoComplete=\"off\" >\t\t\n                    <Row>\t\t\n                        <Col xs=\"12\" sm=\"6\" md=\"6\">\n                             <FormSelectValidation \n                                withLabel={true}\n                                labelName=\"Zona - Validasi\"\n                                labelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n                                formClassName=\"py-2 px-2 bg-white mb-0\"\n                                formId=\"yourFormZone\" \n                                formName=\"formZone\" \n                                formPlaceholder=\"Pilih Zona\"\n                                formOptionData={listZone}\n                                formErrorMessage=\"Silahkan pilih zona\" \n                            />\n                        </Col>\n                        <Col xs=\"12\" sm=\"6\" md=\"6\">\n                            <FormSelectValidation \n                                withLabel={true}\n                                labelName=\"Tipe Pertanyaan - Validasi\"\n                                labelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n                                formClassName=\"py-2 px-2 bg-white mb-0\"\n                                formId=\"yourFormQuestionType\" \n                                formName=\"formQuestionType\" \n                                formPlaceholder=\"Pilih Tipe Pertanyaan\"\n                                formOptionData={listQuestionType}\n                                formErrorMessage=\"Silahkan pilih tipe pertanyaan\" \n                            />\n                        </Col>\n                        <Col xs=\"12\" sm=\"12\" md=\"12\">\n                            <FormInputValidation \n                                withLabel={true}\n                                labelName=\"Pertanyaan - Validasi\"\n                                labelClassName=\"inputLabel position-absolute font-12 text-primary bg-white\"\n                                formClassName=\"py-4 px-2 bg-white mb-0\"\n                                formId=\"yourFormQuestion\" \n                                formType=\"textarea\" \n                                formName=\"formQuestion\" \n                                formPlaceholder=\"Masukan pertanyaan\" \n                                formValue={props.title}\n                                onChange={props.handleChange} \n                                formValue={props.formQuestion}\n                                formValidate={{\n                                    required: { value: true, errorMessage: 'Pertanyaan tidak boleh kosong' },\n                                    minLength: {value: 6, errorMessage: {errorMessageLengthQuestion}},\n                                    maxLength: {value: {maxLengthQuestion}, errorMessage: {errorMessageLengthQuestion}}\n                                }} \n                            />\n                        </Col>\n\n                        <Col xs=\"12\" sm=\"12\" md=\"12\">\n                            <h5 className=\"font-16 text-primary mb-3\">{title}</h5>\n                        </Col>\n                        <Col xs=\"12\" sm=\"12\" md=\"12\">\n                            <Button size=\"lg\" color=\"primary\" type=\"submit\" className=\"float-right mt-3 mb-2 px-5 text-uppercase font-12\">Kirim</Button>\n                        </Col>\n                    </Row>\n                </AvForm>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}